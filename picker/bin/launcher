#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gLi-ags.js"

cat <<EOF | base64 --decode > $file
// ../../../../usr/share/ags/js/src/gtk4/app.ts
import GLib from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Astal from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/src/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "endpoints");
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../usr/share/ags/js/src/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../usr/share/ags/js/gnim/src/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../usr/share/ags/js/src/_app.ts
import IO from "gi://AstalIO";
import GObject from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../usr/share/ags/js/src/gtk4/app.ts
Gtk.init();
GLib.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal.Application);

// sass:/home/luisfer/widgets/picker/style.scss
var style_default = '* {\n  font-family: "Poppins", "Noto Sans", sans-serif;\n}\n\n.launcher {\n  background-color: transparent;\n  border-radius: 20px;\n  padding: 24px;\n  transition: all 300ms ease-in-out;\n}\n\n#launcher-content {\n  background-color: transparent;\n  /* Nord1 */\n  border-radius: 20px;\n  padding: 24px;\n  transition: all 300ms ease-in-out;\n}\n\n.animate-in {\n  opacity: 1;\n  transform: translateY(0);\n}\n\nentry {\n  background-color: rgba(59, 66, 82, 0.6);\n  /* Nord1 */\n  color: #ECEFF4;\n  /* Nord6 */\n  border-radius: 12px;\n  padding: 10px 14px;\n  font-size: 16px;\n  border: none;\n}\n\nentry:focus {\n  border: 2px solid #81A1C1;\n  /* Nord9 */\n}\n\nseparator {\n  margin: 12px 0;\n}\n\nbutton.app {\n  background-color: rgba(67, 76, 94, 0.8);\n  /* Nord2 */\n  color: #D8DEE9;\n  /* Nord4 */\n  border: none;\n  border-radius: 14px;\n  padding: 12px;\n  margin-bottom: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  opacity: 0;\n  transform: translateY(-20px);\n  transition: all 200ms ease-in-out;\n}\n\nbutton.app.visible {\n  opacity: 1;\n  transform: translateY(0);\n}\n\nbutton.app:hover {\n  background-color: rgba(129, 161, 193, 0.3);\n  /* Nord9 */\n}\n\nlabel {\n  font-size: 14px;\n  color: #D8DEE9;\n}\n\nimage {\n  padding-right: 8px;\n  min-width: 24px;\n  min-height: 24px;\n}';

// ../../../../usr/share/ags/js/gnim/src/jsx/jsx.ts
import GObject3 from "gi://GObject";

// ../../../../usr/share/ags/js/gnim/src/jsx/state.ts
import GObject2 from "gi://GObject";
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";

// ../../../../usr/share/ags/js/gnim/src/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../usr/share/ags/js/gnim/src/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject2.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    _Accessor.evaluating?.add(this);
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      subscribers.forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}

// ../../../../usr/share/ags/js/gnim/src/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../usr/share/ags/js/gnim/src/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject3.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children = [], ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../usr/share/ags/js/gnim/src/jsx/Fragment.ts
import GObject4 from "gi://GObject";

// ../../../../usr/share/ags/js/gnim/src/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../usr/share/ags/js/gnim/src/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject4.Object, _b = GObject4.signals, _a = GObject4.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject4.TYPE_OBJECT, GObject4.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject4.TYPE_OBJECT, GObject4.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject4.ParamSpec.jsobject("children", "", "", GObject4.ParamFlags.READABLE)
    };
  }
  static {
    GObject4.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../usr/share/ags/js/gnim/src/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/src/gtk4/index.ts
import Astal2 from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// Launcher.tsx
import AstalApps from "gi://AstalApps";
import Graphene from "gi://Graphene";

// ../../../../usr/share/ags/js/src/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal3 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/gnim/src/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject5 from "gi://GObject";
var dummyBuilder = new Gtk3.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject5.Object)) {
      child = Gtk3.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk3.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../usr/share/ags/js/src/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal3.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal3.Window
});

// Launcher.tsx
function Launcher() {
  let contentbox;
  let searchentry;
  let win;
  const apps = new AstalApps.Apps();
  const [list, setList] = createState(new Array());
  function search(text) {
    if (text === "") setList([]);
    else setList(apps.fuzzy_query(text).slice(0, 8));
  }
  function launch(app) {
    if (app) {
      win.hide();
      app.launch();
    }
  }
  function onKey(_e, keyval, _, mod2) {
    if (keyval === Gdk.KEY_Escape) {
      win.visible = false;
      return;
    }
  }
  function onClick(_e, _, x, y) {
    const [, rect] = contentbox.compute_bounds(win);
    const position = new Graphene.Point({ x, y });
    if (!rect.contains_point(position)) {
      win.visible = false;
      return true;
    }
  }
  return /* @__PURE__ */ jsxs(
    "window",
    {
      $: (ref) => win = ref,
      class: "launcher",
      name: "launcher",
      anchor: 0.5,
      exclusivity: Astal2.Exclusivity.IGNORE,
      keymode: Astal2.Keymode.EXCLUSIVE,
      onNotifyVisible: ({ visible }) => {
        const context = contentbox.get_style_context();
        if (visible) {
          context?.remove_class("animate-in");
          context?.add_class("animate-in");
          searchentry.grab_focus();
        } else {
          searchentry.set_text("");
        }
      },
      children: [
        /* @__PURE__ */ jsx(Gtk2.EventControllerKey, { onKeyPressed: onKey }),
        /* @__PURE__ */ jsx(Gtk2.GestureClick, { onPressed: onClick }),
        /* @__PURE__ */ jsxs(
          "box",
          {
            $: (ref) => contentbox = ref,
            name: "launcher-content",
            height_request: 800,
            width_request: 800,
            valign: Gtk2.Align.CENTER,
            halign: Gtk2.Align.CENTER,
            orientation: Gtk2.Orientation.VERTICAL,
            children: [
              /* @__PURE__ */ jsx(
                "entry",
                {
                  $: (ref) => searchentry = ref,
                  onNotifyText: ({ text }) => search(text),
                  onActivate: () => launch(list.get()[0]),
                  hexpand: true,
                  placeholderText: "Start typing to search"
                }
              ),
              /* @__PURE__ */ jsx(Gtk2.Separator, { visible: list((l) => l.length > 0) }),
              /* @__PURE__ */ jsx(
                "box",
                {
                  orientation: Gtk2.Orientation.VERTICAL,
                  children: /* @__PURE__ */ jsx(For, { each: list, children: (app) => {
                    let button;
                    return /* @__PURE__ */ jsx(
                      "button",
                      {
                        class: "app",
                        $: (ref) => {
                          button = ref;
                          setTimeout(() => button.get_style_context()?.add_class("visible"), 100);
                        },
                        onClicked: () => launch(app),
                        children: /* @__PURE__ */ jsxs("box", { children: [
                          /* @__PURE__ */ jsx("image", { iconName: app.iconName }),
                          /* @__PURE__ */ jsx("label", { label: app.name, maxWidthChars: 40, wrap: true })
                        ] })
                      }
                    );
                  } })
                }
              )
            ]
          }
        )
      ]
    }
  );
}

// app.ts
import GLib3 from "gi://GLib";
var applauncher;
app_default.start({
  css: style_default,
  instanceName: "launcher",
  requestHandler(request, res) {
    const [, argv] = GLib3.shell_parse_argv(request);
    if (!argv) return res("argv parse error");
    switch (argv[0]) {
      case "toggle":
        applauncher.visible = !applauncher.visible;
        return res("ok");
      default:
        return res("unknown command");
    }
  },
  main() {
    applauncher = Launcher();
    app_default.add_window(applauncher);
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvc3JjL19hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvc2NvcGUudHMiLCAic2FzczovaG9tZS9sdWlzZmVyL3dpZGdldHMvcGlja2VyL3N0eWxlLnNjc3MiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvanN4LnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvanN4L3N0YXRlLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvdXRpbC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2pzeC9lbnYudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9nbm9tZS9zaWduYWxUcmFja2VyLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvanN4L0Zvci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL3NyYy9ndGs0L2luZGV4LnRzIiwgIkxhdW5jaGVyLnRzeCIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL3NyYy9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvZ3RrNC9qc3gtcnVudGltZS50cyIsICJhcHAudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IG1rQXBwIH0gZnJvbSBcIi4uL19hcHAuanNcIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbmV4cG9ydCBkZWZhdWx0IG1rQXBwKEFzdGFsLkFwcGxpY2F0aW9uKVxuIiwgIi8qKlxuICogV29ya2Fyb3VuZCBmb3IgXCJDYW4ndCBjb252ZXJ0IG5vbi1udWxsIHBvaW50ZXIgdG8gSlMgdmFsdWUgXCJcbiAqL1xuXG5leHBvcnQge31cblxuZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXyQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKChtKSA9PiBwYXRjaChtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG59XG5cbmZ1bmN0aW9uIHBhdGNoPFAgZXh0ZW5kcyBvYmplY3Q+KHByb3RvOiBQLCBwcm9wOiBFeHRyYWN0PGtleW9mIFAsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKClcbiAgICAgICAgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZW5kcG9pbnRzXCIpXG4gICAgcGF0Y2goV3AucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwibWljcm9waG9uZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3BlYWtlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzaW5rc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzb3VyY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxUcmF5XCIpLCAoeyBUcmF5IH0pID0+IHtcbiAgICBwYXRjaChUcmF5LnByb3RvdHlwZSwgXCJpdGVtc1wiKVxufSlcbiIsICJpbXBvcnQgXCIuL292ZXJyaWRlcy5qc1wiXG5pbXBvcnQgeyBzZXRDb25zb2xlTG9nRG9tYWluIH0gZnJvbSBcImNvbnNvbGVcIlxuaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tIFwic3lzdGVtXCJcbmltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tIFwiLi4vZ25pbS9zcmMvanN4L3Njb3BlLmpzXCJcbmltcG9ydCBJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWwzIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249My4wXCJcbmltcG9ydCB0eXBlIEFzdGFsNCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5cbnR5cGUgQ29uZmlnID0gUGFydGlhbDx7XG4gICAgaW5zdGFuY2VOYW1lOiBzdHJpbmdcbiAgICBjc3M6IHN0cmluZ1xuICAgIGljb25zOiBzdHJpbmdcbiAgICBndGtUaGVtZTogc3RyaW5nXG4gICAgaWNvblRoZW1lOiBzdHJpbmdcbiAgICBjdXJzb3JUaGVtZTogc3RyaW5nXG4gICAgaG9sZDogYm9vbGVhblxuICAgIHJlcXVlc3RIYW5kbGVyKHJlcXVlc3Q6IHN0cmluZywgcmVzOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZCk6IHZvaWRcbiAgICBtYWluKC4uLmFyZ3M6IHN0cmluZ1tdKTogdm9pZFxuICAgIGNsaWVudChtZXNzYWdlOiAobXNnOiBzdHJpbmcpID0+IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXN0YWwzSlMgZXh0ZW5kcyBBc3RhbDMuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI6IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG5pbnRlcmZhY2UgQXN0YWw0SlMgZXh0ZW5kcyBBc3RhbDQuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldD86IGJvb2xlYW4pOiB2b2lkXG4gICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZFxuICAgIHN0YXJ0KGNvbmZpZz86IENvbmZpZyk6IHZvaWRcbn1cblxudHlwZSBBcHAzID0gdHlwZW9mIEFzdGFsMy5BcHBsaWNhdGlvblxudHlwZSBBcHA0ID0gdHlwZW9mIEFzdGFsNC5BcHBsaWNhdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwMz4oQXBwOiBBcHApOiBBc3RhbDNKU1xuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwPEFwcCBleHRlbmRzIEFwcDQ+KEFwcDogQXBwKTogQXN0YWw0SlNcblxuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwKEFwcDogQXBwMyB8IEFwcDQpIHtcbiAgICByZXR1cm4gbmV3IChjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHtcbiAgICAgICAgcHJpdmF0ZSBkaXNwb3NlUm9vdD86ICgpID0+IHZvaWRcblxuICAgICAgICBzdGF0aWMge1xuICAgICAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiBcIkFzdGFsSlNcIiB9LCB0aGlzIGFzIGFueSlcbiAgICAgICAgfVxuXG4gICAgICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmbiA9IEZ1bmN0aW9uKGByZXR1cm4gKGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHtib2R5LmluY2x1ZGVzKFwiO1wiKSA/IGJvZHkgOiBgcmV0dXJuICR7Ym9keX07YH1cbiAgICAgICAgICAgICAgICAgICAgfSlgKVxuICAgICAgICAgICAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlailcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWooZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3RIYW5kbGVyPzogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cblxuICAgICAgICB2ZnVuY19zaHV0ZG93bigpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnZmdW5jX3NodXRkb3duKClcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3Q/LigpXG4gICAgICAgIH1cblxuICAgICAgICB2ZnVuY19yZXF1ZXN0KG1zZzogc3RyaW5nLCBjb25uOiBHaW8uU29ja2V0Q29ubmVjdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyKG1zZywgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIElPLndyaXRlX3NvY2soY29ubiwgU3RyaW5nKHJlc3BvbnNlKSwgKF8sIHJlcykgPT4gSU8ud3JpdGVfc29ja19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdXBlci52ZnVuY19yZXF1ZXN0KG1zZywgY29ubilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgICAgICBzdXBlci5hcHBseV9jc3Moc3R5bGUsIHJlc2V0KVxuICAgICAgICB9XG5cbiAgICAgICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgICAgIGV4aXQoY29kZSA/PyAwKVxuICAgICAgICB9XG5cbiAgICAgICAgc3RhcnQoeyByZXF1ZXN0SGFuZGxlciwgY3NzLCBob2xkLCBtYWluLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfTogQ29uZmlnID0ge30pIHtcbiAgICAgICAgICAgIGNvbnN0IGFwcCA9IHRoaXMgYXMgdW5rbm93biBhcyBJbnN0YW5jZVR5cGU8QXBwMyB8IEFwcDQ+XG5cbiAgICAgICAgICAgIGNsaWVudCA/Pz0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSBcIiR7YXBwLmluc3RhbmNlTmFtZX1cIiBhbHJlYWR5IHJ1bm5pbmdgKVxuICAgICAgICAgICAgICAgIGV4aXQoMSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG4gICAgICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpXG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSByZXF1ZXN0SGFuZGxlclxuICAgICAgICAgICAgYXBwLmNvbm5lY3QoXCJhY3RpdmF0ZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2VSb290ID0gZGlzcG9zZVxuICAgICAgICAgICAgICAgICAgICBtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXBwLmFjcXVpcmVfc29ja2V0KClcbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQoKG1zZykgPT4gSU8uc2VuZF9yZXF1ZXN0KGFwcC5pbnN0YW5jZU5hbWUsIG1zZykhLCAuLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSlcblxuICAgICAgICAgICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgICAgICBob2xkID8/PSB0cnVlXG4gICAgICAgICAgICBpZiAoaG9sZCkgYXBwLmhvbGQoKVxuXG4gICAgICAgICAgICBhcHAucnVuQXN5bmMoW10pXG4gICAgICAgIH1cbiAgICB9KSgpXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgIioge1xuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWY7XG59XG5cbi5sYXVuY2hlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBwYWRkaW5nOiAyNHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XG59XG5cbiNsYXVuY2hlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIE5vcmQxICovXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIHBhZGRpbmc6IDI0cHg7XG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcbn1cblxuLmFuaW1hdGUtaW4ge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG59XG5cbmVudHJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1OSwgNjYsIDgyLCAwLjYpO1xuICAvKiBOb3JkMSAqL1xuICBjb2xvcjogI0VDRUZGNDtcbiAgLyogTm9yZDYgKi9cbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogMTBweCAxNHB4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuZW50cnk6Zm9jdXMge1xuICBib3JkZXI6IDJweCBzb2xpZCAjODFBMUMxO1xuICAvKiBOb3JkOSAqL1xufVxuXG5zZXBhcmF0b3Ige1xuICBtYXJnaW46IDEycHggMDtcbn1cblxuYnV0dG9uLmFwcCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjcsIDc2LCA5NCwgMC44KTtcbiAgLyogTm9yZDIgKi9cbiAgY29sb3I6ICNEOERFRTk7XG4gIC8qIE5vcmQ0ICovXG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMTRweDtcbiAgcGFkZGluZzogMTJweDtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xufVxuXG5idXR0b24uYXBwLnZpc2libGUge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG59XG5cbmJ1dHRvbi5hcHA6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyOSwgMTYxLCAxOTMsIDAuMyk7XG4gIC8qIE5vcmQ5ICovXG59XG5cbmxhYmVsIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogI0Q4REVFOTtcbn1cblxuaW1hZ2Uge1xuICBwYWRkaW5nLXJpZ2h0OiA4cHg7XG4gIG1pbi13aWR0aDogMjRweDtcbiAgbWluLWhlaWdodDogMjRweDtcbn0iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgQ0MsIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIFBhc2NhbGlmeSwgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG4vKipcbiAqIFJlcHJlc2VudHMgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCBjYW4gYmUgcGFzc2VkIGFzIGEgY2hpbGQgdG8gY2xhc3MgY29tcG9uZW50cy5cbiAqL1xuZXhwb3J0IHR5cGUgTm9kZSA9XG4gICAgfCBBcnJheTxHT2JqZWN0Lk9iamVjdD5cbiAgICB8IEdPYmplY3QuT2JqZWN0XG4gICAgfCBudW1iZXJcbiAgICB8IHN0cmluZ1xuICAgIHwgYm9vbGVhblxuICAgIHwgbnVsbFxuICAgIHwgdW5kZWZpbmVkXG5cbmV4cG9ydCBjb25zdCBndGtUeXBlID0gU3ltYm9sKFwiZ3RrIGJ1aWxkZXIgdHlwZVwiKVxuXG4vKipcbiAqIEdldCB0aGUgdHlwZSBvZiB0aGUgb2JqZWN0IHNwZWNpZmllZCB0aHJvdWdoIHRoZSBgJHR5cGVgIHByb3BlcnR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlKG9iamVjdDogR09iamVjdC5PYmplY3QpIHtcbiAgICByZXR1cm4gZ3RrVHlwZSBpbiBvYmplY3QgPyAob2JqZWN0W2d0a1R5cGVdIGFzIHN0cmluZykgOiBudWxsXG59XG5cbi8qKlxuICogRnVuY3Rpb24gQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgRkNQcm9wczxTZWxmLCBQcm9wcz4gPSBQcm9wcyAmIHtcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvblxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG59XG5cbi8qKlxuICogQ2xhc3MgQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgQ0NQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFByb3BzPiA9IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWwgY2hpbGRyZW4gZWxlbWVudHNcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBBcnJheTxOb2RlPiB8IE5vZGVcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogZnVuY3Rpb24gdG8gdXNlIGFzIGEgY29uc3RydWN0b3IsXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICRjb25zdHJ1Y3Rvcj8ocHJvcHM6IFBhcnRpYWw8UHJvcHM+KTogU2VsZlxuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxuICAgIC8qKlxuICAgICAqIENTUyBjbGFzcyBuYW1lc1xuICAgICAqL1xuICAgIGNsYXNzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICAgIC8qKlxuICAgICAqIGlubGluZSBDU1NcbiAgICAgKi9cbiAgICBjc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFByb3BzXTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8UHJvcHNbS10+PiB8IFByb3BzW0tdXG59ICYge1xuICAgIFtTIGluIGtleW9mIFNlbGZbXCIkc2lnbmFsc1wiXSBhcyBTIGV4dGVuZHMgYG5vdGlmeTo6JHtpbmZlciBQfWBcbiAgICAgICAgPyBgb25Ob3RpZnkke1Bhc2NhbGlmeTxQPn1gXG4gICAgICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8Uz59YFxuICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFR5cGUob2JqZWN0OiBvYmplY3QsIHR5cGU6IHN0cmluZykge1xuICAgIGlmIChndGtUeXBlIGluIG9iamVjdCAmJiBvYmplY3RbZ3RrVHlwZV0gIT09IFwiXCIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApXG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgUGFyYW1ldGVyczxUPlswXT4sXG4pOiBSZXR1cm5UeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIG5ldyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIENvbnN0cnVjdG9yUGFyYW1ldGVyczxUPlswXT4sXG4pOiBJbnN0YW5jZVR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IGtleW9mICh0eXBlb2YgZW52KVtcImludHJpbnNpY0VsZW1lbnRzXCJdIHwgKG5ldyAocHJvcHM6IGFueSkgPT4gVCkgfCAoKHByb3BzOiBhbnkpID0+IFQpLFxuICAgIGlucHJvcHM6IGFueSxcbiAgICAvLyBrZXkgaXMgYSBzcGVjaWFsIHByb3AgaW4ganN4IHdoaWNoIGlzIHBhc3NlZCBhcyBhIHRoaXJkIGFyZ3VtZW50IGFuZCBub3QgaW4gcHJvcHNcbiAgICBrZXk/OiBzdHJpbmcsXG4pOiBUIHtcbiAgICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuID0gW10sIC4uLnJlc3QgfSA9IGlucHJvcHMgYXMgQ0NQcm9wczxULCBhbnk+XG4gICAgY29uc3QgcHJvcHMgPSByZXN0IGFzIFJlY29yZDxzdHJpbmcsIGFueT5cblxuICAgIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pXG4gICAgZW52LmluaXRQcm9wcyhwcm9wcylcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgZGVsZXRlIHByb3BzW2tleV1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LnNsaWNlKDIpLCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2gsIC0xKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaGlsZCwgLTEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkoc2lnKVxuICAgICAgICBjb25zdCBpZCA9IG5hbWUuc3RhcnRzV2l0aChcIm5vdGlmeS1cIilcbiAgICAgICAgICAgID8gb2JqZWN0LmNvbm5lY3QoYG5vdGlmeTo6JHtuYW1lLnNsaWNlKDcpfWAsIGhhbmRsZXIpXG4gICAgICAgICAgICA6IG9iamVjdC5jb25uZWN0KGtlYmFiaWZ5KHNpZyksIGhhbmRsZXIpXG5cbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBoYW5kbGUgYmluZGluZ3NcbiAgICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2VcbiAgICB9KVxuXG4gICAgLy8gY2xlYW51cFxuICAgIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQ/LihvYmplY3QpXG4gICAgcmV0dXJuIG9iamVjdFxufVxuXG5leHBvcnQgY29uc3QganN4cyA9IGpzeFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgdHlwZSBFbGVtZW50VHlwZSA9IGtleW9mIEludHJpbnNpY0VsZW1lbnRzIHwgRkMgfCBDQ1xuICAgICAgICB0eXBlIEVsZW1lbnQgPSBHT2JqZWN0Lk9iamVjdFxuICAgICAgICB0eXBlIEVsZW1lbnRDbGFzcyA9IEdPYmplY3QuT2JqZWN0XG5cbiAgICAgICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUHJvcHM+ID0gSnN4UHJvcHM8QywgUHJvcHM+ICYge1xuICAgICAgICAgICAgLy8gRklYTUU6IHdoeSBkb2VzIGFuIGludHJpbnNpYyBlbGVtZW50IGFsd2F5cyByZXNvbHZlIGFzIEZDP1xuICAgICAgICAgICAgLy8gX190eXBlPzogQyBleHRlbmRzIENDID8gXCJDQ1wiIDogQyBleHRlbmRzIEZDID8gXCJGQ1wiIDogbmV2ZXJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIC8vIGNjOiBDQ1Byb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcywgR3RrLkJveC5TaWduYWxTaWduYXR1cmVzPlxuICAgICAgICAgICAgLy8gZmM6IEZDUHJvcHM8R3RrLldpZGdldCwgRm5Qcm9wcz5cbiAgICAgICAgfVxuXG4gICAgICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICAgICAgY2hpbGRyZW46IHt9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtZGVjbGFyYXRpb24tbWVyZ2luZ1xuZXhwb3J0IGNsYXNzIEFjY2Vzc29yPFQgPSB1bmtub3duPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBzdGF0aWMgJGd0eXBlID0gR09iamVjdC5UWVBFX0pTT0JKRUNUIGFzIHVua25vd24gYXMgR09iamVjdC5HVHlwZTxBY2Nlc3Nvcj5cblxuICAgIC8qKiBAZXhwZXJpbWVudGFsICovXG4gICAgc3RhdGljIGV2YWx1YXRpbmc/OiBTZXQ8QWNjZXNzb3I8dW5rbm93bj4+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICAvLyBUT0RPOiBhdXRvIHVuc3ViIHdoZW4gYSBzY29wZSBpcyBhdmFpbGFibGU/XG4gICAgICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgdmFsdWUuXG4gICAgICovXG4gICAgZ2V0KCk6IFQge1xuICAgICAgICBBY2Nlc3Nvci5ldmFsdWF0aW5nPy5hZGQodGhpcylcbiAgICAgICAgcmV0dXJuIHRoaXMuI2dldCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGFzPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB0cmFuc2Zvcm0odGhpcy4jZ2V0KCkpLCB0aGlzLiNzdWJzY3JpYmUpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jYWxsPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXModHJhbnNmb3JtKVxuICAgIH1cblxuICAgIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgQWNjZXNzb3I8JHt0aGlzLmdldCgpfT5gXG4gICAgfVxuXG4gICAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLlwiKVxuICAgICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc29yPFQ+IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+XG59XG5cbmV4cG9ydCB0eXBlIFNldHRlcjxUPiA9IHtcbiAgICAodmFsdWU6IFQpOiB2b2lkXG4gICAgKHZhbHVlOiAocHJldjogVCkgPT4gVCk6IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgU3RhdGU8VD4gPSBbQWNjZXNzb3I8VD4sIFNldHRlcjxUPl1cblxuLyoqXG4gKiBDcmVhdGUgYSB3cml0YWJsZSBzaWduYWwuXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGludGlhbCB2YWx1ZSBvZiB0aGUgc2lnbmFsXG4gKiBAcmV0dXJucyBBbiBgQWNjZXNzb3JgIGFuZCBhIHNldHRlciBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhdGU8VD4oaW5pdDogVCk6IFN0YXRlPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG4gICAgICAgIHJldHVybiAoKSA9PiBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY29uc3Qgc2V0ID0gKG5ld1ZhbHVlOiB1bmtub3duKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlOiBUID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuZXdWYWx1ZShjdXJyZW50VmFsdWUpIDogbmV3VmFsdWVcbiAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKSwgc2V0IGFzIFNldHRlcjxUPl1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBpcyBjb21wdXRlZCBmcm9tIGEgbGlzdCBvZiBgQWNjZXNzb3Jgcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPHN0cmluZz5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPFtudW1iZXIsIHN0cmluZ10+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdKVxuICogY29uc3QgZDogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSwgKGE6IG51bWJlciwgYjogc3RyaW5nKSA9PiBgJHthfSAke2J9YClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBkZXBzIExpc3Qgb2YgYEFjY2Vzc29yc2AuXG4gKiBAcGFyYW0gdHJhbnNmb3JtIEFuIG9wdGlvbmFsIHRyYW5zZm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFYgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVik6IEFjY2Vzc29yPFY+IHtcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IEFycmF5PHVua25vd24+KGRlcHMubGVuZ3RoKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IGRlcHMubWFwKChkZXAsIGkpID0+XG4gICAgICAgICAgICAgICAgZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgICAgICBjYWNoZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogViA9PiB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlW2ldKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlW2ldXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybSA/IHRyYW5zZm9ybSguLi4oYXJncyBhcyBBcmdzKSkgOiAoYXJncyBhcyBWKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdpby5TZXR0aW5nc2AgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIGtleSBUaGUgc2V0dGluZ3Mga2V5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4ob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCB8IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPiB7XG4gICAgY29uc3QgcHJvcCA9IGtlYmFiaWZ5KGtleSkgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBjb25zdCBzaWcgPSBvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MgPyBcImNoYW5nZWRcIiA6IFwibm90aWZ5XCJcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChgJHtzaWd9Ojoke3Byb3B9YCwgKCkgPT4gY2FsbGJhY2soKSlcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncykge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSBhcyBUXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7cHJvcC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICAgICAgICAgIGlmIChnZXR0ZXIgaW4gb2JqZWN0ICYmIHR5cGVvZiBvYmplY3RbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChvYmplY3RbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpIGFzIFRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3AgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W3Byb3BdIGFzIFRcbiAgICAgICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W2tleSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XSBhcyBUXG5cbiAgICAgICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ2V0IHByb3BlcnR5ICR7a2V5fWApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG50eXBlIENvbm5lY3Rpb25IYW5kbGVyPFxuICAgIE8gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTIGV4dGVuZHMga2V5b2YgT1tcIiRzaWduYWxzXCJdLFxuICAgIFQsXG4+ID0gT1tcIiRzaWduYWxzXCJdW1NdIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBpbmZlciBSXG4gICAgPyB2b2lkIGV4dGVuZHMgUlxuICAgICAgICA/ICguLi5hcmdzOiBbLi4uUGFyYW1ldGVyczxPW1wiJHNpZ25hbHNcIl1bU10+LCBjdXJyZW50VmFsdWU6IFRdKSA9PiBUXG4gICAgICAgIDogbmV2ZXJcbiAgICA6IG5ldmVyXG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggc2V0cyB1cCBhIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCBzaWduYWwgY29ubmVjdGlvbnMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogY29uc3QgdmFsdWU6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb25uZWN0aW9uKFxuICogICBcImluaXRpYWwgdmFsdWVcIixcbiAqICAgW29iajEsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdLFxuICogICBbb2JqMiwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl1cbiAqIClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gc2lnbmFscyBBIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCwgc2lnbmFsIG5hbWUgYW5kIGNhbGxiYWNrIHBhaXJzIHRvIGNvbm5lY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uPFxuICAgIFQsXG4gICAgTzEgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMSBleHRlbmRzIGtleW9mIE8xW1wiJHNpZ25hbHNcIl0sXG4gICAgTzIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMiBleHRlbmRzIGtleW9mIE8yW1wiJHNpZ25hbHNcIl0sXG4gICAgTzMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMyBleHRlbmRzIGtleW9mIE8zW1wiJHNpZ25hbHNcIl0sXG4gICAgTzQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNCBleHRlbmRzIGtleW9mIE80W1wiJHNpZ25hbHNcIl0sXG4gICAgTzUgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNSBleHRlbmRzIGtleW9mIE81W1wiJHNpZ25hbHNcIl0sXG4gICAgTzYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNiBleHRlbmRzIGtleW9mIE82W1wiJHNpZ25hbHNcIl0sXG4gICAgTzcgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNyBleHRlbmRzIGtleW9mIE83W1wiJHNpZ25hbHNcIl0sXG4gICAgTzggZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOCBleHRlbmRzIGtleW9mIE84W1wiJHNpZ25hbHNcIl0sXG4gICAgTzkgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOSBleHRlbmRzIGtleW9mIE85W1wiJHNpZ25hbHNcIl0sXG4+KFxuICAgIGluaXQ6IFQsXG4gICAgaDE6IFtPMSwgUzEsIENvbm5lY3Rpb25IYW5kbGVyPE8xLCBTMSwgVD5dLFxuICAgIGgyPzogW08yLCBTMiwgQ29ubmVjdGlvbkhhbmRsZXI8TzIsIFMyLCBUPl0sXG4gICAgaDM/OiBbTzMsIFMzLCBDb25uZWN0aW9uSGFuZGxlcjxPMywgUzMsIFQ+XSxcbiAgICBoND86IFtPNCwgUzQsIENvbm5lY3Rpb25IYW5kbGVyPE80LCBTNCwgVD5dLFxuICAgIGg1PzogW081LCBTNSwgQ29ubmVjdGlvbkhhbmRsZXI8TzUsIFM1LCBUPl0sXG4gICAgaDY/OiBbTzYsIFM2LCBDb25uZWN0aW9uSGFuZGxlcjxPNiwgUzYsIFQ+XSxcbiAgICBoNz86IFtPNywgUzcsIENvbm5lY3Rpb25IYW5kbGVyPE83LCBTNywgVD5dLFxuICAgIGg4PzogW084LCBTOCwgQ29ubmVjdGlvbkhhbmRsZXI8TzgsIFM4LCBUPl0sXG4gICAgaDk/OiBbTzksIFM5LCBDb25uZWN0aW9uSGFuZGxlcjxPOSwgUzksIFQ+XSxcbikge1xuICAgIGxldCB2YWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IHNpZ25hbHMgPSBbaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIGg4LCBoOV0uZmlsdGVyKChoKSA9PiBoICE9PSB1bmRlZmluZWQpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gc2lnbmFscy5tYXAoKFtvYmplY3QsIHNpZ25hbCwgY2FsbGJhY2tdKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuY29ubmVjdC5jYWxsKFxuICAgICAgICAgICAgICAgICAgICBvYmplY3QsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbCBhcyBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIChfLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNhbGxiYWNrKC4uLmFyZ3MsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmRpc2Nvbm5lY3QuY2FsbChvYmplY3QsIGlkKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2lnbmFsIGZyb20gYSBwcm92aWVyIGZ1bmN0aW9uLlxuICogVGhlIHByb3ZpZGVyIGlzIGNhbGxlZCB3aGVuIHRoZSBmaXJzdCBzdWJzY3JpYmVyIGFwcGVhcnMgYW5kIHRoZSByZXR1cm5lZCBkaXNwb3NlXG4gKiBmdW5jdGlvbiBmcm9tIHRoZSBwcm92aWRlciB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBudW1iZXIgb2Ygc3Vic2NyaWJlcnMgZHJvcCB0byB6ZXJvLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHZhbHVlID0gY3JlYXRlRXh0ZXJuYWwoMCwgKHNldCkgPT4ge1xuICogICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHNldCgodikgPT4gdiArIDEpKVxuICogICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBzaG91bGQgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZXJuYWw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBwcm9kdWNlcjogKHNldDogU2V0dGVyPFQ+KSA9PiBEaXNwb3NlRnVuY3Rpb24sXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogRGlzcG9zZUZ1bmN0aW9uXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gcHJvZHVjZXIoKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZTogVCA9IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KGN1cnJlbnRWYWx1ZSkgOiB2XG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgRGVlcEluZmVyPFQgZXh0ZW5kcyBzdHJpbmc+ID0gUmV0dXJuVHlwZTxHTGliLlZhcmlhbnQ8VD5bXCJkZWVwVW5wYWNrXCJdPlxudHlwZSBSZWN1cnNpdmVJbmZlcjxUIGV4dGVuZHMgc3RyaW5nPiA9IFJldHVyblR5cGU8R0xpYi5WYXJpYW50PFQ+W1wicmVjdXJzaXZlVW5wYWNrXCJdPlxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xudHlwZSBTZXR0aW5nczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBVbmNhcGl0YWxpemU8UGFzY2FsaWZ5PEs+Pl06IEFjY2Vzc29yPFJlY3Vyc2l2ZUluZmVyPFRbS10+PlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIGBzZXQke1Bhc2NhbGlmeTxLPn1gXTogU2V0dGVyPERlZXBJbmZlcjxUW0tdPj5cbn1cblxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKlxuICogV3JhcCBhIHtAbGluayBHaW8uU2V0dGluZ3N9IGludG8gYSBjb2xsZWN0aW9uIG9mIHNldHRlcnMgYW5kIGFjY2Vzc29ycy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBzID0gY3JlYXRlU2V0dGluZ3Moc2V0dGluZ3MsIHtcbiAqICAgXCJjb21wbGV4LWtleVwiOiBcImF7c2F7c3N9fVwiLFxuICogICBcInNpbXBsZS1rZXlcIjogXCJzXCIsXG4gKiB9KVxuICpcbiAqIHMuY29tcGxleEtleS5zdWJzY3JpYmUoKCkgPT4ge1xuICogICBwcmludChzLmNvbXBsZXhLZXkuZ2V0KCkpXG4gKiB9KVxuICpcbiAqIHMuc2V0Q29tcGxleEtleSgocHJldikgPT4gKHtcbiAqICAgLi4ucHJldixcbiAqICAga2V5OiB7IG5lc3RlZDogXCJcIiB9LFxuICogfSkpXG4gKiBgYGBcbiAqL1xuLy8gVE9ETzogY29tZSB1cCB3aXRoIGFuIEFQSVxuLy8gLSB0byBtYW51YWxseSBhbm5vdGF0ZSBWYXJpYW50IHR5cGVkIHNldHRlcnMvZ2V0dGVyc1xuLy8gLSB0byBzZXQgcmVjdXJzaXZlIHZzIGRlZXAgdW5wYWNrIHBlciBrZXlcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXR0aW5nczxjb25zdCBUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4oXG4gICAgc2V0dGluZ3M6IEdpby5TZXR0aW5ncyxcbiAgICBrZXlzOiBULFxuKTogU2V0dGluZ3M8VD4ge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGtleXMpLmZsYXRNYXAoKFtrZXksIHR5cGVdKSA9PiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY2FtZWxpZnkoa2V5KSxcbiAgICAgICAgICAgICAgICBuZXcgQWNjZXNzb3IoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHNldHRpbmdzLmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpLFxuICAgICAgICAgICAgICAgICAgICAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gc2V0dGluZ3MuY29ubmVjdChgY2hhbmdlZDo6JHtrZXl9YCwgY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gc2V0dGluZ3MuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBgc2V0JHtrZXlbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaWZ5KGtleSkuc2xpY2UoMSl9YCxcbiAgICAgICAgICAgICAgICAodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zZXRfdmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkuZGVlcFVucGFjaygpKSA6IHYsXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIF0pLFxuICAgIClcbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxudHlwZSBDaGlsZEZuID0gKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmogfCBudW1iZXIgfCBzdHJpbmcsIGluZGV4PzogbnVtYmVyKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIGFkZENoaWxkOiBDaGlsZEZuXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgaW5pdFByb3BzOiAocHJvcHM6IGFueSkgPT4gdm9pZFxuICAgIGRlZmF1bHRDbGVhbnVwOiAob2JqZWN0OiBHT2JqKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIG1pc3NpbmdJbXBsKCkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgYWRkQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSB9IGZyb20gXCIuLi9nbm9tZS9zaWduYWxUcmFja2VyLmpzXCJcblxuLy8gVE9ETzogRnJhZ21lbnQgc2hvdWxkIGltcGxlbWVudCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBjbGFzcyBGcmFnbWVudDxUID0gYW55PiBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBzdGF0aWMgW0dPYmplY3Quc2lnbmFsc10gPSB7XG4gICAgICAgIFwiZGVzdHJveVwiOiB7fSxcblxuICAgICAgICBcImNoaWxkLWFkZGVkXCI6IHtcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVCwgR09iamVjdC5UWVBFX1VJTlRdLFxuICAgICAgICB9LFxuICAgICAgICBcImNoaWxkLXJlbW92ZWRcIjoge1xuICAgICAgICAgICAgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNULCBHT2JqZWN0LlRZUEVfVUlOVF0sXG4gICAgICAgIH0sXG4gICAgfVxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnByb3BlcnRpZXNdID0ge1xuICAgICAgICBjaGlsZHJlbjogR09iamVjdC5QYXJhbVNwZWMuanNvYmplY3QoXCJjaGlsZHJlblwiLCBcIlwiLCBcIlwiLCBHT2JqZWN0LlBhcmFtRmxhZ3MuUkVBREFCTEUpLFxuICAgIH1cblxuICAgIHN0YXRpYyB7XG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh0aGlzKVxuICAgICAgICByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSh0aGlzKVxuICAgIH1cblxuICAgIHN0YXRpYyBuZXc8VD4oY2hpbGRyZW46IEFycmF5PFQ+ID0gW10pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGcmFnbWVudCh7IGNoaWxkcmVuIH0pXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb25uZWN0aW9uSWRzID0gbmV3IFNldDxudW1iZXI+KClcbiAgICBwcml2YXRlIF9jaGlsZHJlbjogQXJyYXk8VD5cblxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFsuLi50aGlzLl9jaGlsZHJlbl1cbiAgICB9XG5cbiAgICBhZGRDaGlsZChjaGlsZDogVCwgaW5kZXg6IG51bWJlciA9IC0xKTogdm9pZCB7XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbmRleCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX2NoaWxkcmVuID0gW1xuICAgICAgICAgICAgICAgIC4uLnRoaXMuX2NoaWxkcmVuLnNsaWNlKDAsIGluZGV4KSxcbiAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZShpbmRleCksXG4gICAgICAgICAgICBdXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZHJlbi5wdXNoKGNoaWxkKVxuICAgICAgICAgICAgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5sZW5ndGggLSAxXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmVtaXQoXCJjaGlsZC1hZGRlZFwiLCBjaGlsZCwgaW5kZXgpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBoYXNDaGlsZChjaGlsZDogVCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChjaCkgPT4gY2ggPT09IGNoaWxkKSA+IC0xXG4gICAgfVxuXG4gICAgcmVtb3ZlQ2hpbGQoY2hpbGQ6IFQpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5maW5kSW5kZXgoKGkpID0+IGkgPT09IGNoaWxkKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpXG5cbiAgICAgICAgdGhpcy5lbWl0KFwiY2hpbGQtcmVtb3ZlZFwiLCBjaGlsZCwgaW5kZXgpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfTogUGFydGlhbDx7IGNoaWxkcmVuOiBBcnJheTxUPiB8IFQgfT4gPSB7fSkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBjb25uZWN0KHNpZ25hbDogc3RyaW5nLCBjYWxsYmFjazogKF86IHRoaXMsIC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogbnVtYmVyIHtcbiAgICAgICAgY29uc3QgaWQgPSBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgICAgIHRoaXMuY29ubmVjdGlvbklkcy5hZGQoaWQpXG4gICAgICAgIHJldHVybiBpZFxuICAgIH1cblxuICAgIGRpc2Nvbm5lY3QoaWQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBzdXBlci5kaXNjb25uZWN0KGlkKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25JZHMuZGVsZXRlKGlkKVxuICAgIH1cblxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZW1pdChcImRlc3Ryb3lcIilcbiAgICAgICAgZm9yIChjb25zdCBpZCBvZiB0aGlzLmNvbm5lY3Rpb25JZHMudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHN1cGVyLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxudHlwZSBUeXBlID0geyBuZXcgKC4uLmFyZ3M6IGFueVtdKTogR09iamVjdC5PYmplY3QgfVxuXG4vLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgdHlwZXNcbmNvbnN0IG1vZCA9IGltcG9ydChcInJlc291cmNlOi8vL29yZy9nbm9tZS9zaGVsbC9taXNjL3NpZ25hbFRyYWNrZXIuanNcIilcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlOiAodHlwZTogVHlwZSkgPT4gdm9pZCA9IGF3YWl0IG1vZFxuICAgIC50aGVuKChtb2QpID0+IG1vZC5yZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSlcbiAgICAuY2F0Y2goKCkgPT4gKCkgPT4gdm9pZCAwKVxuIiwgImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IsIFN0YXRlLCBjcmVhdGVTdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuaW1wb3J0IHR5cGUgQ2x1dHRlciBmcm9tIFwiZ2k6Ly9DbHV0dGVyXCJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmltcG9ydCB0eXBlIEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj0zLjBcIlxuXG5pbnRlcmZhY2UgRm9yUHJvcHM8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5PiB7XG4gICAgZWFjaDogQWNjZXNzb3I8SXRlcmFibGU8SXRlbT4+XG4gICAgY2hpbGRyZW46IChpdGVtOiBJdGVtLCBpbmRleDogQWNjZXNzb3I8bnVtYmVyPikgPT4gRWxcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjoge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3l9XG4gICAgICogLSAqKkdub21lKio6IHtAbGluayBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95fVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFbCwgaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZClcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIHRoZSBrZXkgZm9yIGVhY2ggaXRlbS5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQgaXRlbXMgYXJlIG1hcHBlZCBieTpcbiAgICAgKiAtIHZhbHVlIGluIGNhc2Ugb2YgcHJpbWl0aXZlIHZhbHVlc1xuICAgICAqIC0gcmVmZXJlbmNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlkPzogKGl0ZW06IEl0ZW0pID0+IEtleSB8IEl0ZW1cbn1cblxuLy8gVE9ETzogc3VwcG9ydCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3I8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5Pih7XG4gICAgZWFjaCxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxuICAgIGlkID0gKGl0ZW06IEl0ZW0pID0+IGl0ZW0sXG59OiBGb3JQcm9wczxJdGVtLCBFbCwgS2V5Pik6IEZyYWdtZW50PEVsPiB7XG4gICAgdHlwZSBNYXBJdGVtID0geyBpdGVtOiBJdGVtOyBjaGlsZDogRWw7IGluZGV4OiBTdGF0ZTxudW1iZXI+OyBzY29wZTogU2NvcGUgfVxuXG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXA8SXRlbSB8IEtleSwgTWFwSXRlbT4oKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEVsPigpXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleF0sIHNjb3BlIH06IE1hcEl0ZW0pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQsIGl0ZW0sIGluZGV4LmdldCgpKVxuICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgfVxuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayhpdGFyZWFibGU6IEl0ZXJhYmxlPEl0ZW0+KSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gWy4uLml0YXJlYWJsZV1cbiAgICAgICAgY29uc3QgaWRzID0gaXRlbXMubWFwKGlkKVxuICAgICAgICBjb25zdCBpZFNldCA9IG5ldyBTZXQoaWRzKVxuXG4gICAgICAgIC8vIGNsZWFudXAgY2hpbGRyZW4gbWlzc2luZyBmcm9tIGFyclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtYXAuZW50cmllcygpKSB7XG4gICAgICAgICAgICAvLyB0aGVyZSBpcyBubyBnZW5lcmljIHdheSB0byBpbnNlcnQgY2hpbGQgYXQgaW5kZXhcbiAgICAgICAgICAgIC8vIHNvIHdlIHNvcnQgYnkgcmVtb3ZpbmcgZXZlcnkgY2hpbGQgYW5kIHJlYXBwZW5kaW5nIGluIG9yZGVyXG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZCh2YWx1ZS5jaGlsZClcblxuICAgICAgICAgICAgaWYgKCFpZFNldC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgICAgICAgICBtYXAuZGVsZXRlKGtleSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBpbmRleCBhbmQgYWRkIG5ldyBpdGVtc1xuICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGlkc1tpXVxuICAgICAgICAgICAgaWYgKG1hcC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgfSA9IG1hcC5nZXQoa2V5KSFcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKVxuICAgICAgICAgICAgICAgIGlmIChmcmFnbWVudC5oYXNDaGlsZChjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gY3JlYXRlU3RhdGUoaSlcbiAgICAgICAgICAgICAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpXG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSlcbiAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gZWFjaC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuZXhwb3J0IHsgQXN0YWwsIEd0aywgR2RrIH1cbiIsICJpbXBvcnQgeyBGb3IsIGNyZWF0ZVN0YXRlIH0gZnJvbSBcImFnc1wiXG5pbXBvcnQgeyBBc3RhbCwgR3RrLCBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IEFzdGFsQXBwcyBmcm9tIFwiZ2k6Ly9Bc3RhbEFwcHNcIlxuaW1wb3J0IEdyYXBoZW5lIGZyb20gXCJnaTovL0dyYXBoZW5lXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGF1bmNoZXIoKSB7XG4gICAgbGV0IGNvbnRlbnRib3g6IEd0ay5Cb3hcbiAgICBsZXQgc2VhcmNoZW50cnk6IEd0ay5FbnRyeVxuICAgIGxldCB3aW46IEFzdGFsLldpbmRvd1xuXG4gICAgY29uc3QgYXBwcyA9IG5ldyBBc3RhbEFwcHMuQXBwcygpXG4gICAgY29uc3QgW2xpc3QsIHNldExpc3RdID0gY3JlYXRlU3RhdGUobmV3IEFycmF5PEFzdGFsQXBwcy5BcHBsaWNhdGlvbj4oKSlcblxuICAgIGZ1bmN0aW9uIHNlYXJjaCh0ZXh0OiBzdHJpbmcpIHtcbiAgICAgICAgaWYgKHRleHQgPT09IFwiXCIpIHNldExpc3QoW10pXG4gICAgICAgIGVsc2Ugc2V0TGlzdChhcHBzLmZ1enp5X3F1ZXJ5KHRleHQpLnNsaWNlKDAsIDgpKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxhdW5jaChhcHA/OiBBc3RhbEFwcHMuQXBwbGljYXRpb24pIHtcbiAgICAgICAgaWYgKGFwcCkge1xuICAgICAgICAgICAgd2luLmhpZGUoKVxuICAgICAgICAgICAgYXBwLmxhdW5jaCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjbG9zZSBvbiBFU0NcbiAgICAvLyBoYW5kbGUgYWx0ICsgbnVtYmVyIGtleVxuICAgIGZ1bmN0aW9uIG9uS2V5KFxuICAgICAgICBfZTogR3RrLkV2ZW50Q29udHJvbGxlcktleSxcbiAgICAgICAga2V5dmFsOiBudW1iZXIsXG4gICAgICAgIF86IG51bWJlcixcbiAgICAgICAgbW9kOiBudW1iZXIsXG4gICAgKSB7XG4gICAgICAgIGlmIChrZXl2YWwgPT09IEdkay5LRVlfRXNjYXBlKSB7XG4gICAgICAgICAgICB3aW4udmlzaWJsZSA9IGZhbHNlXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgLy8gY2xvc2Ugb24gY2xpY2thd2F5XG4gICAgZnVuY3Rpb24gb25DbGljayhfZTogR3RrLkdlc3R1cmVDbGljaywgXzogbnVtYmVyLCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICBjb25zdCBbLCByZWN0XSA9IGNvbnRlbnRib3guY29tcHV0ZV9ib3VuZHMod2luKVxuICAgICAgICBjb25zdCBwb3NpdGlvbiA9IG5ldyBHcmFwaGVuZS5Qb2ludCh7IHgsIHkgfSlcblxuICAgICAgICBpZiAoIXJlY3QuY29udGFpbnNfcG9pbnQocG9zaXRpb24pKSB7XG4gICAgICAgICAgICB3aW4udmlzaWJsZSA9IGZhbHNlXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICAgJD17KHJlZikgPT4gKHdpbiA9IHJlZil9XG4gICAgICAgICAgICBjbGFzcz1cImxhdW5jaGVyXCJcbiAgICAgICAgICAgIG5hbWU9XCJsYXVuY2hlclwiXG4gICAgICAgICAgICBhbmNob3I9ezAuNX1cbiAgICAgICAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5JR05PUkV9XG4gICAgICAgICAgICBrZXltb2RlPXtBc3RhbC5LZXltb2RlLkVYQ0xVU0lWRX1cbiAgICAgICAgICAgIG9uTm90aWZ5VmlzaWJsZT17KHsgdmlzaWJsZSB9KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGV4dCA9IGNvbnRlbnRib3guZ2V0X3N0eWxlX2NvbnRleHQoKVxuXG4gICAgICAgICAgICAgICAgaWYgKHZpc2libGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dD8ucmVtb3ZlX2NsYXNzKFwiYW5pbWF0ZS1pblwiKVxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0Py5hZGRfY2xhc3MoXCJhbmltYXRlLWluXCIpXG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaGVudHJ5LmdyYWJfZm9jdXMoKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaGVudHJ5LnNldF90ZXh0KFwiXCIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPEd0ay5FdmVudENvbnRyb2xsZXJLZXkgb25LZXlQcmVzc2VkPXtvbktleX0gLz5cbiAgICAgICAgICAgIDxHdGsuR2VzdHVyZUNsaWNrIG9uUHJlc3NlZD17b25DbGlja30gLz5cbiAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICAkPXsocmVmKSA9PiAoY29udGVudGJveCA9IHJlZil9XG4gICAgICAgICAgICAgICAgbmFtZT1cImxhdW5jaGVyLWNvbnRlbnRcIlxuICAgICAgICAgICAgICAgIGhlaWdodF9yZXF1ZXN0PXs4MDB9XG4gICAgICAgICAgICAgICAgd2lkdGhfcmVxdWVzdD17ODAwfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZW50cnlcbiAgICAgICAgICAgICAgICAgICAgJD17KHJlZikgPT4gKHNlYXJjaGVudHJ5ID0gcmVmKX1cbiAgICAgICAgICAgICAgICAgICAgb25Ob3RpZnlUZXh0PXsoeyB0ZXh0IH0pID0+IHNlYXJjaCh0ZXh0KX1cbiAgICAgICAgICAgICAgICAgICAgb25BY3RpdmF0ZT17KCkgPT4gbGF1bmNoKGxpc3QuZ2V0KClbMF0pfVxuICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyVGV4dD1cIlN0YXJ0IHR5cGluZyB0byBzZWFyY2hcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPEd0ay5TZXBhcmF0b3IgdmlzaWJsZT17bGlzdCgobCkgPT4gbC5sZW5ndGggPiAwKX0gLz5cbiAgICAgICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8Rm9yIGVhY2g9e2xpc3R9PlxuICAgICAgICAgICAgICAgICAgICAgICAgeyhhcHApID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgYnV0dG9uOiBHdGsuQnV0dG9uXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImFwcFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkPXsocmVmKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uID0gcmVmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gRXNwZXJhIHVub3MgbWlsaXNlZ3VuZG9zIGFudGVzIGRlIGFwbGljYXIgbGEgY2xhc2UgdmlzaWJsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gYnV0dG9uLmdldF9zdHlsZV9jb250ZXh0KCk/LmFkZF9jbGFzcyhcInZpc2libGVcIiksIDEwMClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IGxhdW5jaChhcHApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSBpY29uTmFtZT17YXBwLmljb25OYW1lfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17YXBwLm5hbWV9IG1heFdpZHRoQ2hhcnM9ezQwfSB3cmFwIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPC9Gb3I+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKVxufVxuIiwgIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2UgKi9cbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgeyBDQ1Byb3BzIH0gZnJvbSBcIi4uLy4uL2duaW0vc3JjL2pzeC9pbmRleC5qc1wiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCIuLi8uLi9nbmltL3NyYy9ndGs0L2pzeC1ydW50aW1lLmpzXCJcblxudHlwZSBQcm9wczxUIGV4dGVuZHMgR3RrLldpZGdldCwgUHJvcHM+ID0gQ0NQcm9wczxULCBQYXJ0aWFsPFByb3BzPj5cblxuT2JqZWN0LmFzc2lnbihpbnRyaW5zaWNFbGVtZW50cywge1xuICAgIGJveDogR3RrLkJveCxcbiAgICBidXR0b246IEd0ay5CdXR0b24sXG4gICAgY2VudGVyYm94OiBHdGsuQ2VudGVyQm94LFxuICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsXG4gICAgZHJhd2luZ2FyZWE6IEd0ay5EcmF3aW5nQXJlYSxcbiAgICBlbnRyeTogR3RrLkVudHJ5LFxuICAgIGltYWdlOiBHdGsuSW1hZ2UsXG4gICAgbGFiZWw6IEd0ay5MYWJlbCxcbiAgICBsZXZlbGJhcjogR3RrLkxldmVsQmFyLFxuICAgIG1lbnVidXR0b246IEd0ay5NZW51QnV0dG9uLFxuICAgIG92ZXJsYXk6IEd0ay5PdmVybGF5LFxuICAgIHBvcG92ZXI6IEd0ay5Qb3BvdmVyLFxuICAgIHJldmVhbGVyOiBHdGsuUmV2ZWFsZXIsXG4gICAgc2Nyb2xsZWR3aW5kb3c6IEd0ay5TY3JvbGxlZFdpbmRvdyxcbiAgICBzbGlkZXI6IEFzdGFsLlNsaWRlcixcbiAgICBzdGFjazogR3RrLlN0YWNrLFxuICAgIHN3aXRjaDogR3RrLlN3aXRjaCxcbiAgICB0b2dnbGVidXR0b246IEd0ay5Ub2dnbGVCdXR0b24sXG4gICAgd2luZG93OiBBc3RhbC5XaW5kb3csXG59KVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgbmFtZXNwYWNlIEpTWCB7XG4gICAgICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICAgICAgICBib3g6IFByb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGJ1dHRvbjogUHJvcHM8R3RrLkJ1dHRvbiwgR3RrLkJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgY2VudGVyYm94OiBQcm9wczxHdGsuQ2VudGVyQm94LCBHdGsuQ2VudGVyQm94LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBQcm9wczxBc3RhbC5DaXJjdWxhclByb2dyZXNzLCBBc3RhbC5DaXJjdWxhclByb2dyZXNzLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBkcmF3aW5nYXJlYTogUHJvcHM8R3RrLkRyYXdpbmdBcmVhLCBHdGsuRHJhd2luZ0FyZWEuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGVudHJ5OiBQcm9wczxHdGsuRW50cnksIEd0ay5FbnRyeS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgaW1hZ2U6IFByb3BzPEd0ay5JbWFnZSwgR3RrLkltYWdlLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBsYWJlbDogUHJvcHM8R3RrLkxhYmVsLCBHdGsuTGFiZWwuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxldmVsYmFyOiBQcm9wczxHdGsuTGV2ZWxCYXIsIEd0ay5MZXZlbEJhci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbWVudWJ1dHRvbjogUHJvcHM8R3RrLk1lbnVCdXR0b24sIEd0ay5NZW51QnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBvdmVybGF5OiBQcm9wczxHdGsuT3ZlcmxheSwgR3RrLk92ZXJsYXkuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHBvcG92ZXI6IFByb3BzPEd0ay5Qb3BvdmVyLCBHdGsuUG9wb3Zlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcmV2ZWFsZXI6IFByb3BzPEd0ay5SZXZlYWxlciwgR3RrLlJldmVhbGVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzY3JvbGxlZHdpbmRvdzogUHJvcHM8R3RrLlNjcm9sbGVkV2luZG93LCBHdGsuU2Nyb2xsZWRXaW5kb3cuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNsaWRlcjogUHJvcHM8QXN0YWwuU2xpZGVyLCBBc3RhbC5TbGlkZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHN0YWNrOiBQcm9wczxHdGsuU3RhY2ssIEd0ay5TdGFjay5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3dpdGNoOiBQcm9wczxHdGsuU3dpdGNoLCBHdGsuU3dpdGNoLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICB0b2dnbGVidXR0b246IFByb3BzPEd0ay5Ub2dnbGVCdXR0b24sIEd0ay5Ub2dnbGVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHdpbmRvdzogUHJvcHM8QXN0YWwuV2luZG93LCBBc3RhbC5XaW5kb3cuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0ICogZnJvbSBcIi4uLy4uL2duaW0vc3JjL2d0azQvanN4LXJ1bnRpbWUuanNcIlxuIiwgImltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZ2V0VHlwZSwgb25DbGVhbnVwLCBBY2Nlc3NvciwgRnJhZ21lbnQgfSBmcm9tIFwiLi4vanN4L2luZGV4LmpzXCJcbmltcG9ydCB7IGNvbmZpZ3VlIH0gZnJvbSBcIi4uL2pzeC9lbnYuanNcIlxuXG5jb25zdCBkdW1teUJ1aWxkZXIgPSBuZXcgR3RrLkJ1aWxkZXIoKVxuXG5mdW5jdGlvbiBhZGQocGFyZW50OiBHdGsuQnVpbGRhYmxlLCBjaGlsZDogR09iamVjdC5PYmplY3QsIF86IG51bWJlcikge1xuICAgIGlmICghc3BlY2lhbEFkZChwYXJlbnQsIGNoaWxkLCBfKSkge1xuICAgICAgICBwYXJlbnQudmZ1bmNfYWRkX2NoaWxkKGR1bW15QnVpbGRlciwgY2hpbGQsIGdldFR5cGUoY2hpbGQpKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc3BlY2lhbFJlbW92ZShfcGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgX2NoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIC8vIFRPRE86IGFkZCBhbnkgc3BlY2lhbCBjYXNlXG4gICAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHNwZWNpYWxBZGQocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCBfOiBudW1iZXIpIHtcbiAgICAvLyBUT0RPOiBhZGQgYW55IG90aGVyIHNwZWNpYWwgY2FzZVxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuQWRqdXN0bWVudCAmJlxuICAgICAgICBcInNldF9hZGp1c3RtZW50XCIgaW4gcGFyZW50ICYmXG4gICAgICAgIHR5cGVvZiBwYXJlbnQuc2V0X2FkanVzdG1lbnQgPT09IFwiZnVuY3Rpb25cIlxuICAgICkge1xuICAgICAgICBwYXJlbnQuc2V0X2FkanVzdG1lbnQoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiZcbiAgICAgICAgcGFyZW50IGluc3RhbmNlb2YgR3RrLlN0YWNrICYmXG4gICAgICAgIGNoaWxkLm5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgY2hpbGQubmFtZSAhPT0gbnVsbCAmJlxuICAgICAgICBnZXRUeXBlKGNoaWxkKSA9PT0gXCJuYW1lZFwiXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlBvcG92ZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24pIHtcbiAgICAgICAgcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudU1vZGVsICYmXG4gICAgICAgIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbiB8fCBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuUG9wb3Zlck1lbnUpXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5zZXRfbWVudV9tb2RlbChjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvLk1lbnUpIHtcbiAgICAgICAgLy8gVE9ETzpcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5BcHBsaWNhdGlvbikge1xuICAgICAgICBwYXJlbnQuYWRkX3dpbmRvdyhjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuVGV4dEJ1ZmZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuVGV4dFZpZXcpIHtcbiAgICAgICAgcGFyZW50LnNldF9idWZmZXIoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHJlbW92ZShwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAoc3BlY2lhbFJlbW92ZShwYXJlbnQsIGNoaWxkKSkgcmV0dXJuXG5cbiAgICBpZiAoXCJzZXRfY2hpbGRcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfY2hpbGQgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2NoaWxkKG51bGwpXG4gICAgfVxuXG4gICAgaWYgKFwicmVtb3ZlXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQucmVtb3ZlID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihgY2Fubm90IHJlbW92ZSAke2NoaWxkfSBmcm9tICR7cGFyZW50fWApXG59XG5cbmNvbnN0IHsgYWRkQ2hpbGQsIGludHJpbnNpY0VsZW1lbnRzIH0gPSBjb25maWd1ZSh7XG4gICAgc2V0Q3NzKG9iamVjdCwgY3NzKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGN0eCA9IG9iamVjdC5nZXRfc3R5bGVfY29udGV4dCgpXG4gICAgICAgIGxldCBwcm92aWRlcjogR3RrLkNzc1Byb3ZpZGVyXG5cbiAgICAgICAgY29uc3Qgc2V0dGVyID0gKGNzczogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNzcy5pbmNsdWRlcyhcIntcIikgfHwgIWNzcy5pbmNsdWRlcyhcIn1cIikpIHtcbiAgICAgICAgICAgICAgICBjc3MgPSBgKiB7ICR7Y3NzfSB9YFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpXG5cbiAgICAgICAgICAgIHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpXG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKGNzcylcbiAgICAgICAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzLmdldCgpKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNzcy5zdWJzY3JpYmUoKCkgPT4gc2V0dGVyKGNzcy5nZXQoKSkpXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNsYXNzTmFtZS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKCkgPT4gKG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLykpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBhZGRDaGlsZChwYXJlbnQsIGNoaWxkLCBpbmRleCA9IC0xKSB7XG4gICAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICBjaGlsZCA9IEd0ay5MYWJlbC5uZXcoU3RyaW5nKGNoaWxkKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIGluZGV4KSkgcmV0dXJuXG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICBwYXJlbnQuYWRkQ2hpbGQoY2hpbGQpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQnVpbGRhYmxlKSB7XG4gICAgICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgYWRkKHBhcmVudCwgY2gsIGluZGV4KVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNoaWxkLmNvbm5lY3QoXCJjaGlsZC1hZGRlZFwiLCAoXywgY2g6IHVua25vd24sIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgYWRkICR7Y2h9IHRvICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYWRkQ2hpbGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIGNoaWxkLmNvbm5lY3QoXCJjaGlsZC1yZW1vdmVkXCIsIChfLCBjaDogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZShwYXJlbnQsIGNoKVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2hpbGQuZGVzdHJveSgpKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgYWRkICR7Y2hpbGR9IHRvICR7cGFyZW50fWApXG4gICAgfSxcbn0pXG5cbmV4cG9ydCB7IEZyYWdtZW50LCBpbnRyaW5zaWNFbGVtZW50cyB9XG5leHBvcnQgeyBqc3gsIGpzeHMgfSBmcm9tIFwiLi4vanN4L2pzeC5qc1wiXG4iLCAiaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCI7XG5pbXBvcnQgc3R5bGUgZnJvbSBcIi4vc3R5bGUuc2Nzc1wiO1xuaW1wb3J0IExhdW5jaGVyIGZyb20gXCIuL0xhdW5jaGVyXCI7XG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCI7XG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiO1xuXG5sZXQgYXBwbGF1bmNoZXI6IEd0ay5XaW5kb3c7XG5cbmFwcC5zdGFydCh7XG4gIGNzczogc3R5bGUsXG4gIGluc3RhbmNlTmFtZTogXCJsYXVuY2hlclwiLFxuICByZXF1ZXN0SGFuZGxlcihyZXF1ZXN0LCByZXMpIHtcbiAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihyZXF1ZXN0KTtcbiAgICBpZiAoIWFyZ3YpIHJldHVybiByZXMoXCJhcmd2IHBhcnNlIGVycm9yXCIpO1xuXG4gICAgc3dpdGNoIChhcmd2WzBdKSB7XG4gICAgICBjYXNlIFwidG9nZ2xlXCI6XG4gICAgICAgIGFwcGxhdW5jaGVyLnZpc2libGUgPSAhYXBwbGF1bmNoZXIudmlzaWJsZTtcbiAgICAgICAgcmV0dXJuIHJlcyhcIm9rXCIpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHJlcyhcInVua25vd24gY29tbWFuZFwiKTtcbiAgICB9XG4gIH0sXG4gIG1haW4oKSB7XG4gICAgYXBwbGF1bmNoZXIgPSBMYXVuY2hlcigpIGFzIEd0ay5XaW5kb3c7XG4gICAgYXBwLmFkZF93aW5kb3coYXBwbGF1bmNoZXIpO1xuICB9LFxufSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUEsT0FBTyxVQUFVO0FBQ2pCLE9BQU8sU0FBUztBQUNoQixPQUFPLFdBQVc7OztBQ0lsQixTQUFTLFNBQVMsS0FBYTtBQUMzQixTQUFPLElBQ0YsUUFBUSxtQkFBbUIsT0FBTyxFQUNsQyxXQUFXLEtBQUssR0FBRyxFQUNuQixZQUFZO0FBQ3JCO0FBRUEsZUFBZSxTQUFZQSxNQUE4QkMsUUFBdUI7QUFDNUUsU0FBT0QsS0FBSSxLQUFLLENBQUMsTUFBTUMsT0FBTSxFQUFFLE9BQU8sQ0FBQyxFQUFFLE1BQU0sTUFBTSxNQUFNO0FBQy9EO0FBRUEsU0FBUyxNQUF3QixPQUFVLE1BQWdDO0FBQ3ZFLFNBQU8sZUFBZSxPQUFPLE1BQU07QUFBQSxJQUMvQixNQUFNO0FBQ0YsYUFBTyxLQUFLLE9BQU8sU0FBUyxJQUFJLENBQUMsRUFBRSxFQUFFO0FBQUEsSUFDekM7QUFBQSxFQUNKLENBQUM7QUFDTDtBQUVBLE1BQU0sU0FBUyxPQUFPLGdCQUFnQixHQUFHLENBQUMsRUFBRSxNQUFNLFlBQVksTUFBTTtBQUNoRSxRQUFNLEtBQUssV0FBVyxNQUFNO0FBQzVCLFFBQU0sWUFBWSxXQUFXLFVBQVU7QUFDdkMsUUFBTSxZQUFZLFdBQVcsWUFBWTtBQUM3QyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8sbUJBQW1CLEdBQUcsQ0FBQyxFQUFFLE9BQU8sTUFBTTtBQUN4RCxRQUFNLE9BQU8sV0FBVyxTQUFTO0FBQ3JDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxxQkFBcUIsR0FBRyxDQUFDLEVBQUUsU0FBUyxXQUFXLE9BQU8sTUFBTTtBQUM5RSxRQUFNLFFBQVEsV0FBVyxPQUFPO0FBQ2hDLFFBQU0sVUFBVSxXQUFXLFVBQVU7QUFDckMsUUFBTSxVQUFVLFdBQVcsU0FBUztBQUNwQyxRQUFNLE9BQU8sV0FBVyxPQUFPO0FBQ25DLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxvQkFBb0IsR0FBRyxDQUFDLEVBQUUsVUFBVSxTQUFTLFVBQVUsTUFBTTtBQUMvRSxRQUFNLFNBQVMsV0FBVyxPQUFPO0FBQ2pDLFFBQU0sU0FBUyxXQUFXLFVBQVU7QUFDcEMsUUFBTSxTQUFTLFdBQVcsWUFBWTtBQUN0QyxRQUFNLFNBQVMsV0FBVyxTQUFTO0FBQ25DLFFBQU0sUUFBUSxXQUFXLGdCQUFnQjtBQUN6QyxRQUFNLFFBQVEsV0FBVyxpQkFBaUI7QUFDMUMsUUFBTSxVQUFVLFdBQVcsU0FBUztBQUN4QyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8saUJBQWlCLEdBQUcsQ0FBQyxFQUFFLE9BQU8sT0FBTyxNQUFNO0FBQzdELFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxPQUFPLFdBQVcsdUJBQXVCO0FBQy9DLFFBQU0sT0FBTyxXQUFXLHFCQUFxQjtBQUM3QyxRQUFNLE9BQU8sV0FBVyxzQkFBc0I7QUFDOUMsUUFBTSxPQUFPLFdBQVcsb0JBQW9CO0FBQzVDLFFBQU0sT0FBTyxXQUFXLFVBQVU7QUFDdEMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLG1CQUFtQixHQUFHLENBQUMsRUFBRSxLQUFLLE1BQU07QUFDdEQsUUFBTSxLQUFLLFdBQVcsZUFBZTtBQUNyQyxRQUFNLEtBQUssV0FBVyxjQUFjO0FBQ3hDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxrQkFBa0IsR0FBRyxDQUFDLEVBQUUsUUFBUSxhQUFhLE1BQU07QUFDckUsUUFBTSxPQUFPLFdBQVcsZUFBZTtBQUN2QyxRQUFNLGFBQWEsV0FBVyxTQUFTO0FBQzNDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyx5QkFBeUIsR0FBRyxDQUFDLEVBQUUsY0FBYyxNQUFNO0FBQ3JFLFFBQU0sY0FBYyxXQUFXLFNBQVM7QUFDNUMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLGNBQWMsR0FBRyxDQUFDLEVBQUUsSUFBSSxPQUFPLE1BQU0sTUFBTTtBQUM3RCxRQUFNLEdBQUcsV0FBVyxXQUFXO0FBQy9CLFFBQU0sR0FBRyxXQUFXLFNBQVM7QUFDN0IsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNoQyxRQUFNLE1BQU0sV0FBVyxXQUFXO0FBQ2xDLFFBQU0sTUFBTSxXQUFXLGFBQWE7QUFDcEMsUUFBTSxNQUFNLFdBQVcsVUFBVTtBQUNqQyxRQUFNLE1BQU0sV0FBVyxTQUFTO0FBQ2hDLFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxNQUFNLFdBQVcsV0FBVztBQUNsQyxRQUFNLE1BQU0sV0FBVyxPQUFPO0FBQzlCLFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNwQyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLEtBQUssTUFBTTtBQUNuRCxRQUFNLEtBQUssV0FBVyxPQUFPO0FBQ2pDLENBQUM7OztBQzNGRCxTQUFTLDJCQUEyQjtBQUNwQyxTQUFTLE1BQU0sbUJBQW1COzs7QUNGM0IsSUFBTSxRQUFOLE1BQU0sT0FBTTtBQUFBLEVBVWYsWUFBWSxRQUF1QjtBQU5uQyxvQkFBVyxvQkFBSSxJQUFzQjtBQUVyQyxTQUFRLFdBQVcsb0JBQUksSUFBZ0I7QUFDdkMsU0FBUSxTQUFTLG9CQUFJLElBQWdCO0FBQ3JDLFNBQVEsVUFBVTtBQUdkLFNBQUssU0FBUztBQUFBLEVBQ2xCO0FBQUEsRUFFQSxVQUFVLFVBQXNCO0FBQzVCLFNBQUssVUFBVSxJQUFJLFFBQVE7QUFBQSxFQUMvQjtBQUFBLEVBRUEsUUFBUSxVQUFzQjtBQUMxQixRQUFJLEtBQUssVUFBVSxDQUFDLEtBQUssT0FBTyxTQUFTO0FBQ3JDLFdBQUssT0FBTyxRQUFRLFFBQVE7QUFBQSxJQUNoQyxPQUFPO0FBQ0gsV0FBSyxPQUFPLElBQUksUUFBUTtBQUFBLElBQzVCO0FBQUEsRUFDSjtBQUFBLEVBRUEsSUFBTyxJQUFhO0FBQ2hCLFVBQU0sT0FBTyxPQUFNO0FBQ25CLFdBQU0sVUFBVTtBQUVoQixRQUFJO0FBQ0EsYUFBTyxHQUFHO0FBQUEsSUFDZCxVQUFFO0FBQ0UsV0FBSyxPQUFPLFFBQVEsQ0FBQyxPQUFPLEdBQUcsQ0FBQztBQUNoQyxXQUFLLE9BQU8sTUFBTTtBQUNsQixXQUFLLFVBQVU7QUFDZixhQUFNLFVBQVU7QUFBQSxJQUNwQjtBQUFBLEVBQ0o7QUFBQSxFQUVBLFVBQVU7QUFDTixTQUFLLFNBQVMsUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQ2xDLFNBQUssU0FBUyxNQUFNO0FBQ3BCLFNBQUssU0FBUyxNQUFNO0FBQ3BCLFdBQU8sS0FBSztBQUFBLEVBQ2hCO0FBQ0o7QUE2RU8sU0FBUyxXQUFrQjtBQUM5QixRQUFNLFFBQVEsTUFBTTtBQUNwQixNQUFJLENBQUMsT0FBTztBQUNSLFVBQU0sTUFBTSwyQ0FBMkM7QUFBQSxFQUMzRDtBQUVBLFNBQU87QUFDWDtBQUtPLFNBQVMsVUFBVSxTQUFxQjtBQUMzQyxNQUFJLENBQUMsTUFBTSxTQUFTO0FBQ2hCLFlBQVEsTUFBTSxNQUFNLHNEQUFzRCxDQUFDO0FBQUEsRUFDL0U7QUFFQSxRQUFNLFNBQVMsVUFBVSxPQUFPO0FBQ3BDO0FBd0NPLFNBQVMsV0FBYyxJQUFnQztBQUMxRCxRQUFNLFFBQVEsSUFBSSxNQUFNLElBQUk7QUFDNUIsU0FBTyxNQUFNLElBQUksTUFBTSxHQUFHLE1BQU0sTUFBTSxRQUFRLENBQUMsQ0FBQztBQUNwRDs7O0FEcExBLE9BQU8sUUFBUTtBQUNmLE9BQU8sYUFBYTtBQXdDYixTQUFTLE1BQU0sS0FBa0I7QUFDcEMsU0FBTyxJQUFLLE1BQU0sZ0JBQWdCLElBQUk7QUFBQSxJQUdsQyxPQUFPO0FBQ0gsY0FBUSxjQUFjLEVBQUUsV0FBVyxVQUFVLEdBQUcsSUFBVztBQUFBLElBQy9EO0FBQUEsSUFFQSxLQUFLLE1BQTRCO0FBQzdCLGFBQU8sSUFBSSxRQUFRLENBQUMsS0FBSyxRQUFRO0FBQzdCLFlBQUk7QUFDQSxnQkFBTSxLQUFLLFNBQVM7QUFBQSwwQkFDZCxLQUFLLFNBQVMsR0FBRyxJQUFJLE9BQU8sVUFBVSxJQUFJLEdBQUc7QUFBQSx1QkFDaEQ7QUFDSCxhQUFHLEVBQUUsRUFBRSxLQUFLLEdBQUcsRUFBRSxNQUFNLEdBQUc7QUFBQSxRQUM5QixTQUFTLE9BQU87QUFDWixjQUFJLEtBQUs7QUFBQSxRQUNiO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTDtBQUFBLElBSUEsaUJBQXVCO0FBQ25CLFlBQU0sZUFBZTtBQUNyQixXQUFLLGNBQWM7QUFBQSxJQUN2QjtBQUFBLElBRUEsY0FBYyxLQUFhLE1BQWtDO0FBQ3pELFVBQUksT0FBTyxLQUFLLG1CQUFtQixZQUFZO0FBQzNDLGFBQUssZUFBZSxLQUFLLENBQUMsYUFBYTtBQUNuQyxhQUFHLFdBQVcsTUFBTSxPQUFPLFFBQVEsR0FBRyxDQUFDLEdBQUcsUUFBUSxHQUFHLGtCQUFrQixHQUFHLENBQUM7QUFBQSxRQUMvRSxDQUFDO0FBQUEsTUFDTCxPQUFPO0FBQ0gsY0FBTSxjQUFjLEtBQUssSUFBSTtBQUFBLE1BQ2pDO0FBQUEsSUFDSjtBQUFBLElBRUEsVUFBVSxPQUFlLFFBQVEsT0FBTztBQUNwQyxZQUFNLFVBQVUsT0FBTyxLQUFLO0FBQUEsSUFDaEM7QUFBQSxJQUVBLEtBQUssTUFBcUI7QUFDdEIsWUFBTSxLQUFLO0FBQ1gsV0FBSyxRQUFRLENBQUM7QUFBQSxJQUNsQjtBQUFBLElBRUEsTUFBTSxFQUFFLGdCQUFnQixLQUFLLE1BQU0sTUFBTSxRQUFRLE9BQU8sR0FBRyxJQUFJLElBQVksQ0FBQyxHQUFHO0FBQzNFLFlBQU0sTUFBTTtBQUVaLGlCQUFXLE1BQU07QUFDYixjQUFNLG1CQUFtQixJQUFJLFlBQVksbUJBQW1CO0FBQzVELGFBQUssQ0FBQztBQUFBLE1BQ1Y7QUFFQSxhQUFPLE9BQU8sTUFBTSxHQUFHO0FBQ3ZCLDBCQUFvQixJQUFJLFlBQVk7QUFFcEMsV0FBSyxpQkFBaUI7QUFDdEIsVUFBSSxRQUFRLFlBQVksTUFBTTtBQUMxQixtQkFBVyxDQUFDLFlBQVk7QUFDcEIsZUFBSyxjQUFjO0FBQ25CLGlCQUFPLEdBQUcsV0FBVztBQUFBLFFBQ3pCLENBQUM7QUFBQSxNQUNMLENBQUM7QUFFRCxVQUFJO0FBQ0EsWUFBSSxlQUFlO0FBQUEsTUFDdkIsUUFBUTtBQUNKLGVBQU8sT0FBTyxDQUFDLFFBQVEsR0FBRyxhQUFhLElBQUksY0FBYyxHQUFHLEdBQUksR0FBRyxXQUFXO0FBQUEsTUFDbEY7QUFFQSxVQUFJLElBQUssTUFBSyxVQUFVLEtBQUssS0FBSztBQUVsQyxVQUFJLE1BQU8sS0FBSSxVQUFVLEtBQUs7QUFFOUIsZUFBUztBQUNULFVBQUksS0FBTSxLQUFJLEtBQUs7QUFFbkIsVUFBSSxTQUFTLENBQUMsQ0FBQztBQUFBLElBQ25CO0FBQUEsRUFDSixFQUFHO0FBQ1A7OztBRjFIQSxJQUFJLEtBQUs7QUFJVCxLQUFLLFNBQVMsWUFBWTtBQUkxQixNQUFNLE9BQU8sb0JBQW9CLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxJQUFJLE1BQU0sSUFBSSxLQUFLLENBQUMsRUFBRSxNQUFNLE1BQU0sTUFBTTtBQUU1RixJQUFPLGNBQVEsTUFBTSxNQUFNLFdBQVc7OztBSWZ0Qzs7O0FDQUEsT0FBT0MsY0FBYTs7O0FDQXBCLE9BQU9DLGNBQWE7QUFDcEIsT0FBTyxTQUFTO0FBQ2hCLE9BQU9DLFdBQVU7OztBQ0FWLFNBQVMsU0FBUyxLQUFhO0FBQ2xDLFNBQU8sSUFDRixRQUFRLG1CQUFtQixPQUFPLEVBQ2xDLFdBQVcsS0FBSyxHQUFHLEVBQ25CLFlBQVk7QUFDckI7QUFFTyxTQUFTQyxVQUFTLEtBQWE7QUFDbEMsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQXVETyxTQUFTLElBQUksS0FBcUIsTUFBYyxPQUFZO0FBQy9ELFFBQU0sTUFBTUMsVUFBUyxJQUFJO0FBQ3pCLFFBQU0sU0FBUyxPQUFPLEdBQUc7QUFDekIsUUFBTSxTQUFTLE9BQU8sR0FBRztBQUV6QixNQUFJO0FBRUosTUFBSSxVQUFVLE9BQU8sT0FBTyxJQUFJLE1BQU0sTUFBTSxZQUFZO0FBQ3BELGNBQVcsSUFBSSxNQUFNLEVBQW9CO0FBQUEsRUFDN0MsT0FBTztBQUNILGNBQVUsSUFBSSxJQUF3QjtBQUFBLEVBQzFDO0FBRUEsTUFBSSxZQUFZLE9BQU87QUFDbkIsUUFBSSxVQUFVLE9BQU8sT0FBTyxJQUFJLE1BQU0sTUFBTSxZQUFZO0FBQ3BEO0FBQUMsTUFBQyxJQUFJLE1BQU0sRUFBdUIsS0FBSztBQUFBLElBQzVDLE9BQU87QUFDSCxhQUFPLE9BQU8sS0FBSyxFQUFFLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztBQUFBLElBQ3hDO0FBQUEsRUFDSjtBQUNKOzs7QUQ3RU8sSUFBTSxXQUFOLE1BQU0sa0JBQThCLFNBQVM7QUFBQSxFQUNoRDtBQUFBLFNBQU8sU0FBU0MsU0FBUTtBQUFBO0FBQUEsRUFLeEI7QUFBQSxFQUNBO0FBQUEsRUFFQSxZQUFZLEtBQWMsV0FBK0I7QUFDckQsVUFBTSxrRUFBa0U7QUFDeEUsU0FBSyxhQUFhLGNBQWMsTUFBTSxNQUFNO0FBQzVDLFNBQUssT0FBTztBQUFBLEVBQ2hCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBT0EsVUFBVSxVQUE4QztBQUVwRCxXQUFPLEtBQUssV0FBVyxRQUFRO0FBQUEsRUFDbkM7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLE1BQVM7QUFDTCxjQUFTLFlBQVksSUFBSSxJQUFJO0FBQzdCLFdBQU8sS0FBSyxLQUFLO0FBQUEsRUFDckI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsR0FBVSxXQUF5QztBQUMvQyxXQUFPLElBQUksVUFBUyxNQUFNLFVBQVUsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLFVBQVU7QUFBQSxFQUNyRTtBQUFBLEVBRVUsTUFBYSxXQUF5QztBQUM1RCxXQUFPLEtBQUssR0FBRyxTQUFTO0FBQUEsRUFDNUI7QUFBQSxFQUVBLFdBQW1CO0FBQ2YsV0FBTyxZQUFZLEtBQUssSUFBSSxDQUFDO0FBQUEsRUFDakM7QUFBQSxFQUVBLENBQUMsT0FBTyxXQUFXLElBQUk7QUFDbkIsWUFBUSxLQUFLLHFEQUFxRDtBQUNsRSxXQUFPLEtBQUssU0FBUztBQUFBLEVBQ3pCO0FBQ0o7QUF1Qk8sU0FBUyxZQUFlLE1BQW1CO0FBQzlDLE1BQUksZUFBZTtBQUNuQixRQUFNLGNBQWMsb0JBQUksSUFBdUI7QUFFL0MsUUFBTSxZQUErQixDQUFDLGFBQWE7QUFDL0MsZ0JBQVksSUFBSSxRQUFRO0FBQ3hCLFdBQU8sTUFBTSxZQUFZLE9BQU8sUUFBUTtBQUFBLEVBQzVDO0FBRUEsUUFBTUMsT0FBTSxDQUFDLGFBQXNCO0FBQy9CLFVBQU0sUUFBVyxPQUFPLGFBQWEsYUFBYSxTQUFTLFlBQVksSUFBSTtBQUMzRSxRQUFJLGlCQUFpQixPQUFPO0FBQ3hCLHFCQUFlO0FBQ2Ysa0JBQVksUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQUEsSUFDcEM7QUFBQSxFQUNKO0FBRUEsU0FBTyxDQUFDLElBQUksU0FBUyxNQUFNLGNBQWMsU0FBUyxHQUFHQSxJQUFnQjtBQUN6RTs7O0FFaEdPLFNBQVMsU0FBUyxNQUF1QjtBQUM1QyxTQUFPLE9BQU8sT0FBTyxLQUFLLElBQUk7QUFDbEM7QUFXQSxTQUFTLGNBQWM7QUFDbkIsUUFBTSxNQUFNLGNBQWM7QUFDOUI7QUFFTyxJQUFNLE1BQWM7QUFBQSxFQUN2QixtQkFBbUIsQ0FBQztBQUFBLEVBQ3BCLFVBQVU7QUFBQSxFQUNWLFFBQVE7QUFBQSxFQUNSLFVBQVU7QUFBQSxFQUNWLFdBQVcsTUFBTTtBQUFBLEVBQ2pCLGdCQUFnQixNQUFNO0FBQzFCOzs7QUhmTyxJQUFNLFVBQVUsT0FBTyxrQkFBa0I7QUFLekMsU0FBUyxRQUFRLFFBQXdCO0FBQzVDLFNBQU8sV0FBVyxTQUFVLE9BQU8sT0FBTyxJQUFlO0FBQzdEO0FBdUVBLFNBQVMsY0FBYyxNQUF1QjtBQUMxQyxTQUFPLEtBQUsscUJBQXFCQyxTQUFRO0FBQzdDO0FBRUEsU0FBUyxlQUFlLE1BQXVCO0FBQzNDLFNBQU8sT0FBTyxTQUFTLGNBQWMsQ0FBQyxjQUFjLElBQUk7QUFDNUQ7QUFHTyxTQUFTLFFBQVEsUUFBZ0IsTUFBYztBQUNsRCxNQUFJLFdBQVcsVUFBVSxPQUFPLE9BQU8sTUFBTSxJQUFJO0FBQzdDLFlBQVEsS0FBSyx1QkFBdUIsT0FBTyxPQUFPLENBQUMsT0FBTyxJQUFJLE9BQU8sTUFBTSxFQUFFO0FBQUEsRUFDakY7QUFFQSxTQUFPLE9BQU8sUUFBUSxFQUFFLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztBQUM3QztBQVlPLFNBQVMsSUFDWixNQUNBLFNBRUEsS0FDQztBQUNELFFBQU0sRUFBRSxHQUFHLE9BQU8sY0FBYyxXQUFXLENBQUMsR0FBRyxHQUFHLEtBQUssSUFBSTtBQUMzRCxRQUFNLFFBQVE7QUFFZCxNQUFJLElBQUssUUFBTyxPQUFPLE9BQU8sRUFBRSxJQUFJLENBQUM7QUFDckMsTUFBSSxVQUFVLEtBQUs7QUFFbkIsYUFBVyxDQUFDQyxNQUFLLEtBQUssS0FBSyxPQUFPLFFBQVEsS0FBSyxHQUFHO0FBQzlDLFFBQUksVUFBVSxPQUFXLFFBQU8sTUFBTUEsSUFBRztBQUFBLEVBQzdDO0FBRUEsTUFBSSxPQUFPLFNBQVMsVUFBVTtBQUMxQixRQUFJLFFBQVEsSUFBSSxtQkFBbUI7QUFDL0IsYUFBTyxJQUFJLGtCQUFrQixJQUFJO0FBQUEsSUFDckMsT0FBTztBQUNILFlBQU0sTUFBTSw4QkFBOEIsSUFBSSxHQUFHO0FBQUEsSUFDckQ7QUFBQSxFQUNKO0FBRUEsTUFBSSxlQUFlLElBQUksR0FBRztBQUN0QixVQUFNQyxVQUFTLEtBQUssRUFBRSxVQUFVLEdBQUcsTUFBTSxDQUFDO0FBQzFDLFFBQUksTUFBTyxTQUFRQSxTQUFRLEtBQUs7QUFDaEMsUUFBSUEsT0FBTTtBQUNWLFdBQU9BO0FBQUEsRUFDWDtBQUdBLFFBQU0sRUFBRSxLQUFLLE9BQU8sVUFBVSxJQUFJO0FBQ2xDLFNBQU8sTUFBTTtBQUNiLFNBQU8sTUFBTTtBQUViLFFBQU0sVUFBNkQsQ0FBQztBQUNwRSxRQUFNLFdBQStDLENBQUM7QUFHdEQsYUFBVyxDQUFDRCxNQUFLLEtBQUssS0FBSyxPQUFPLFFBQVEsS0FBSyxHQUFHO0FBQzlDLFFBQUlBLEtBQUksV0FBVyxJQUFJLEdBQUc7QUFDdEIsY0FBUSxLQUFLLENBQUNBLEtBQUksTUFBTSxDQUFDLEdBQUcsS0FBc0IsQ0FBQztBQUNuRCxhQUFPLE1BQU1BLElBQUc7QUFBQSxJQUNwQjtBQUNBLFFBQUksaUJBQWlCLFVBQVU7QUFDM0IsZUFBUyxLQUFLLENBQUNBLE1BQUssS0FBSyxDQUFDO0FBQzFCLFlBQU1BLElBQUcsSUFBSSxNQUFNLElBQUk7QUFBQSxJQUMzQjtBQUFBLEVBQ0o7QUFHQSxRQUFNLFNBQVMsZUFBZSxhQUFhLEtBQUssSUFBSSxJQUFLLEtBQWUsS0FBSztBQUM3RSxNQUFJLGFBQWMsUUFBTyxPQUFPLFFBQVEsS0FBSztBQUM3QyxNQUFJLE1BQU8sU0FBUSxRQUFRLEtBQUs7QUFFaEMsTUFBSSxJQUFLLEtBQUksT0FBTyxRQUFRLEdBQUc7QUFDL0IsTUFBSSxVQUFXLEtBQUksU0FBUyxRQUFRLFNBQVM7QUFHN0MsYUFBVyxTQUFTLE1BQU0sUUFBUSxRQUFRLElBQUksV0FBVyxDQUFDLFFBQVEsR0FBRztBQUNqRSxRQUFJLFVBQVUsTUFBTTtBQUNoQixjQUFRLEtBQUssbURBQW1EO0FBQ2hFO0FBQUEsSUFDSjtBQUVBLFFBQUksTUFBTSxRQUFRLEtBQUssR0FBRztBQUN0QixpQkFBVyxNQUFNLE9BQU87QUFDcEIsWUFBSSxTQUFTLFFBQVEsSUFBSSxFQUFFO0FBQUEsTUFDL0I7QUFBQSxJQUNKLFdBQVcsT0FBTztBQUNkLFVBQUksU0FBUyxRQUFRLE9BQU8sRUFBRTtBQUFBLElBQ2xDO0FBQUEsRUFDSjtBQUdBLFFBQU0sa0JBQWtCLFFBQVEsSUFBSSxDQUFDLENBQUMsS0FBSyxPQUFPLE1BQU07QUFDcEQsVUFBTSxPQUFPLFNBQVMsR0FBRztBQUN6QixVQUFNLEtBQUssS0FBSyxXQUFXLFNBQVMsSUFDOUIsT0FBTyxRQUFRLFdBQVcsS0FBSyxNQUFNLENBQUMsQ0FBQyxJQUFJLE9BQU8sSUFDbEQsT0FBTyxRQUFRLFNBQVMsR0FBRyxHQUFHLE9BQU87QUFFM0MsV0FBTyxNQUFNLE9BQU8sV0FBVyxFQUFFO0FBQUEsRUFDckMsQ0FBQztBQUdELFFBQU0sa0JBQWtCLFNBQVMsSUFBSSxDQUFDLENBQUMsTUFBTSxPQUFPLE1BQU07QUFDdEQsVUFBTSxVQUFVLFFBQVEsVUFBVSxNQUFNO0FBQ3BDLFVBQUksUUFBUSxNQUFNLFFBQVEsSUFBSSxDQUFDO0FBQUEsSUFDbkMsQ0FBQztBQUNELFFBQUksUUFBUSxNQUFNLFFBQVEsSUFBSSxDQUFDO0FBQy9CLFdBQU87QUFBQSxFQUNYLENBQUM7QUFHRCxNQUFJLGdCQUFnQixTQUFTLEtBQUssZ0JBQWdCLFNBQVMsR0FBRztBQUMxRCxjQUFVLE1BQU07QUFDWixzQkFBZ0IsUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQ3BDLHNCQUFnQixRQUFRLENBQUMsT0FBTyxHQUFHLENBQUM7QUFBQSxJQUN4QyxDQUFDO0FBQUEsRUFDTDtBQUVBLE1BQUksTUFBTTtBQUNWLFNBQU87QUFDWDtBQUVPLElBQU0sT0FBTzs7O0FJdE9wQixPQUFPRSxjQUFhOzs7QUNLcEIsSUFBTSxNQUFNLE9BQU8sbURBQW1EO0FBRS9ELElBQU0sMEJBQWdELE1BQU0sSUFDOUQsS0FBSyxDQUFDQyxTQUFRQSxLQUFJLHVCQUF1QixFQUN6QyxNQUFNLE1BQU0sTUFBTSxNQUFNOzs7QURUN0I7QUFLTyxJQUFNLFdBQU4sTUFBTSxtQkFBMEIsS0FBQUMsU0FBUSxRQUNuQyxLQUFBQSxTQUFRLFNBV1IsS0FBQUEsU0FBUSxZQVptQixJQUFlO0FBQUEsRUFnRWxELFlBQVksRUFBRSxXQUFXLENBQUMsRUFBRSxJQUF5QyxDQUFDLEdBQUc7QUFDckUsVUFBTTtBQXhDVixTQUFRLGdCQUFnQixvQkFBSSxJQUFZO0FBeUNwQyxTQUFLLFlBQVksTUFBTSxRQUFRLFFBQVEsSUFBSSxXQUFXLENBQUMsUUFBUTtBQUFBLEVBQ25FO0FBQUEsRUFsRUE7QUFBQSxTQUFRLE1BQW1CO0FBQUEsTUFDdkIsV0FBVyxDQUFDO0FBQUEsTUFFWixlQUFlO0FBQUEsUUFDWCxhQUFhLENBQUNBLFNBQVEsYUFBYUEsU0FBUSxTQUFTO0FBQUEsTUFDeEQ7QUFBQSxNQUNBLGlCQUFpQjtBQUFBLFFBQ2IsYUFBYSxDQUFDQSxTQUFRLGFBQWFBLFNBQVEsU0FBUztBQUFBLE1BQ3hEO0FBQUEsSUFDSjtBQUFBO0FBQUEsRUFFQTtBQUFBLFNBQVEsTUFBc0I7QUFBQSxNQUMxQixVQUFVQSxTQUFRLFVBQVUsU0FBUyxZQUFZLElBQUksSUFBSUEsU0FBUSxXQUFXLFFBQVE7QUFBQSxJQUN4RjtBQUFBO0FBQUEsRUFFQSxPQUFPO0FBQ0gsSUFBQUEsU0FBUSxjQUFjLElBQUk7QUFDMUIsNEJBQXdCLElBQUk7QUFBQSxFQUNoQztBQUFBLEVBRUEsT0FBTyxJQUFPLFdBQXFCLENBQUMsR0FBRztBQUNuQyxXQUFPLElBQUksVUFBUyxFQUFFLFNBQVMsQ0FBQztBQUFBLEVBQ3BDO0FBQUEsRUFLQSxJQUFJLFdBQVc7QUFDWCxXQUFPLENBQUMsR0FBRyxLQUFLLFNBQVM7QUFBQSxFQUM3QjtBQUFBLEVBRUEsU0FBUyxPQUFVLFFBQWdCLElBQVU7QUFDekMsUUFBSSxpQkFBaUIsV0FBVTtBQUMzQixZQUFNLE1BQU0seUNBQXlDO0FBQUEsSUFDekQ7QUFFQSxRQUFJLFFBQVEsR0FBRztBQUNYLFdBQUssWUFBWTtBQUFBLFFBQ2IsR0FBRyxLQUFLLFVBQVUsTUFBTSxHQUFHLEtBQUs7QUFBQSxRQUNoQztBQUFBLFFBQ0EsR0FBRyxLQUFLLFVBQVUsTUFBTSxLQUFLO0FBQUEsTUFDakM7QUFBQSxJQUNKLE9BQU87QUFDSCxXQUFLLFVBQVUsS0FBSyxLQUFLO0FBQ3pCLGNBQVEsS0FBSyxVQUFVLFNBQVM7QUFBQSxJQUNwQztBQUVBLFNBQUssS0FBSyxlQUFlLE9BQU8sS0FBSztBQUNyQyxTQUFLLE9BQU8sVUFBVTtBQUFBLEVBQzFCO0FBQUEsRUFFQSxTQUFTLE9BQW1CO0FBQ3hCLFdBQU8sS0FBSyxVQUFVLFVBQVUsQ0FBQyxPQUFPLE9BQU8sS0FBSyxJQUFJO0FBQUEsRUFDNUQ7QUFBQSxFQUVBLFlBQVksT0FBZ0I7QUFDeEIsVUFBTSxRQUFRLEtBQUssVUFBVSxVQUFVLENBQUMsTUFBTSxNQUFNLEtBQUs7QUFDekQsU0FBSyxVQUFVLE9BQU8sT0FBTyxDQUFDO0FBRTlCLFNBQUssS0FBSyxpQkFBaUIsT0FBTyxLQUFLO0FBQ3ZDLFNBQUssT0FBTyxVQUFVO0FBQUEsRUFDMUI7QUFBQSxFQU9BLFFBQVEsUUFBZ0IsVUFBcUQ7QUFDekUsVUFBTSxLQUFLLE1BQU0sUUFBUSxRQUFRLFFBQVE7QUFDekMsU0FBSyxjQUFjLElBQUksRUFBRTtBQUN6QixXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsV0FBVyxJQUFrQjtBQUN6QixVQUFNLFdBQVcsRUFBRTtBQUNuQixTQUFLLGNBQWMsT0FBTyxFQUFFO0FBQUEsRUFDaEM7QUFBQSxFQUVBLFVBQVU7QUFDTixTQUFLLEtBQUssU0FBUztBQUNuQixlQUFXLE1BQU0sS0FBSyxjQUFjLE9BQU8sR0FBRztBQUMxQyxZQUFNLFdBQVcsRUFBRTtBQUFBLElBQ3ZCO0FBQUEsRUFDSjtBQUNKOzs7QUV2RE8sU0FBUyxJQUF1QztBQUFBLEVBQ25EO0FBQUEsRUFDQSxVQUFVO0FBQUEsRUFDVjtBQUFBLEVBQ0EsS0FBSyxDQUFDLFNBQWU7QUFDekIsR0FBMEM7QUFHdEMsUUFBTSxlQUFlLFNBQVM7QUFDOUIsUUFBTSxNQUFNLG9CQUFJLElBQXlCO0FBQ3pDLFFBQU0sV0FBVyxJQUFJLFNBQWE7QUFFbEMsV0FBU0MsUUFBTyxFQUFFLE1BQU0sT0FBTyxPQUFPLENBQUMsS0FBSyxHQUFHLE1BQU0sR0FBWTtBQUM3RCxRQUFJLE9BQU8sWUFBWSxZQUFZO0FBQy9CLGNBQVEsT0FBTyxNQUFNLE1BQU0sSUFBSSxDQUFDO0FBQUEsSUFDcEMsV0FBVyxZQUFZLE1BQU07QUFDekIsVUFBSSxlQUFlLEtBQUs7QUFBQSxJQUM1QjtBQUNBLFVBQU0sUUFBUTtBQUFBLEVBQ2xCO0FBRUEsV0FBUyxTQUFTLFdBQTJCO0FBQ3pDLFVBQU0sUUFBUSxDQUFDLEdBQUcsU0FBUztBQUMzQixVQUFNLE1BQU0sTUFBTSxJQUFJLEVBQUU7QUFDeEIsVUFBTSxRQUFRLElBQUksSUFBSSxHQUFHO0FBR3pCLGVBQVcsQ0FBQyxLQUFLLEtBQUssS0FBSyxJQUFJLFFBQVEsR0FBRztBQUd0QyxlQUFTLFlBQVksTUFBTSxLQUFLO0FBRWhDLFVBQUksQ0FBQyxNQUFNLElBQUksR0FBRyxHQUFHO0FBQ2pCLFFBQUFBLFFBQU8sS0FBSztBQUNaLFlBQUksT0FBTyxHQUFHO0FBQUEsTUFDbEI7QUFBQSxJQUNKO0FBR0EsVUFBTSxJQUFJLENBQUMsTUFBTSxNQUFNO0FBQ25CLFlBQU0sTUFBTSxJQUFJLENBQUM7QUFDakIsVUFBSSxJQUFJLElBQUksR0FBRyxHQUFHO0FBQ2QsY0FBTTtBQUFBLFVBQ0YsT0FBTyxDQUFDLEVBQUUsUUFBUTtBQUFBLFVBQ2xCO0FBQUEsUUFDSixJQUFJLElBQUksSUFBSSxHQUFHO0FBQ2YsaUJBQVMsQ0FBQztBQUNWLFlBQUksU0FBUyxTQUFTLEtBQUssR0FBRztBQUMxQixrQkFBUSxLQUFLLHlCQUF5QixHQUFHLEVBQUU7QUFBQSxRQUMvQyxPQUFPO0FBQ0gsbUJBQVMsU0FBUyxLQUFLO0FBQUEsUUFDM0I7QUFBQSxNQUNKLE9BQU87QUFDSCxjQUFNLENBQUMsT0FBTyxRQUFRLElBQUksWUFBWSxDQUFDO0FBQ3ZDLGNBQU0sUUFBUSxJQUFJLE1BQU0sWUFBWTtBQUNwQyxjQUFNLFFBQVEsTUFBTSxJQUFJLE1BQU0sUUFBUSxNQUFNLEtBQUssQ0FBQztBQUNsRCxZQUFJLElBQUksS0FBSyxFQUFFLE1BQU0sT0FBTyxPQUFPLENBQUMsT0FBTyxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBQzdELGlCQUFTLFNBQVMsS0FBSztBQUFBLE1BQzNCO0FBQUEsSUFDSixDQUFDO0FBQUEsRUFDTDtBQUVBLFFBQU0sVUFBVSxLQUFLLFVBQVUsTUFBTTtBQUNqQyxhQUFTLEtBQUssSUFBSSxDQUFDO0FBQUEsRUFDdkIsQ0FBQztBQUNELFdBQVMsS0FBSyxJQUFJLENBQUM7QUFFbkIsWUFBVSxNQUFNO0FBQ1osWUFBUTtBQUVSLGVBQVcsU0FBUyxJQUFJLE9BQU8sR0FBRztBQUM5QixNQUFBQSxRQUFPLEtBQUs7QUFBQSxJQUNoQjtBQUVBLFFBQUksTUFBTTtBQUFBLEVBQ2QsQ0FBQztBQUVELFNBQU87QUFDWDs7O0FDbEhBLE9BQU9DLFlBQVc7QUFDbEIsT0FBT0MsVUFBUztBQUNoQixPQUFPLFNBQVM7OztBQ0FoQixPQUFPLGVBQWU7QUFDdEIsT0FBTyxjQUFjOzs7QUNGckIsT0FBT0MsVUFBUztBQUNoQixPQUFPQyxZQUFXOzs7QUNGbEIsT0FBT0MsVUFBUztBQUNoQixPQUFPQyxVQUFTO0FBQ2hCLE9BQU9DLGNBQWE7QUFJcEIsSUFBTSxlQUFlLElBQUlDLEtBQUksUUFBUTtBQUVyQyxTQUFTLElBQUksUUFBdUIsT0FBdUIsR0FBVztBQUNsRSxNQUFJLENBQUMsV0FBVyxRQUFRLE9BQU8sQ0FBQyxHQUFHO0FBQy9CLFdBQU8sZ0JBQWdCLGNBQWMsT0FBTyxRQUFRLEtBQUssQ0FBQztBQUFBLEVBQzlEO0FBQ0o7QUFFQSxTQUFTLGNBQWMsU0FBeUIsUUFBd0I7QUFFcEUsU0FBTztBQUNYO0FBRUEsU0FBUyxXQUFXLFFBQXdCLE9BQXVCLEdBQVc7QUFFMUUsTUFDSSxpQkFBaUJBLEtBQUksY0FDckIsb0JBQW9CLFVBQ3BCLE9BQU8sT0FBTyxtQkFBbUIsWUFDbkM7QUFDRSxXQUFPLGVBQWUsS0FBSztBQUMzQixXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQ0ksaUJBQWlCQSxLQUFJLFVBQ3JCLGtCQUFrQkEsS0FBSSxTQUN0QixNQUFNLFNBQVMsTUFDZixNQUFNLFNBQVMsUUFDZixRQUFRLEtBQUssTUFBTSxTQUNyQjtBQUNFLFdBQU8sVUFBVSxPQUFPLE1BQU0sSUFBSTtBQUNsQyxXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQUksaUJBQWlCQSxLQUFJLFdBQVcsa0JBQWtCQSxLQUFJLFlBQVk7QUFDbEUsV0FBTyxZQUFZLEtBQUs7QUFDeEIsV0FBTztBQUFBLEVBQ1g7QUFFQSxNQUNJLGlCQUFpQkMsS0FBSSxjQUNwQixrQkFBa0JELEtBQUksY0FBYyxrQkFBa0JBLEtBQUksY0FDN0Q7QUFDRSxXQUFPLGVBQWUsS0FBSztBQUMzQixXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQUksaUJBQWlCQyxLQUFJLFlBQVksa0JBQWtCQSxLQUFJLE1BQU07QUFBQSxFQUVqRTtBQUVBLE1BQUksaUJBQWlCRCxLQUFJLFVBQVUsa0JBQWtCQSxLQUFJLGFBQWE7QUFDbEUsV0FBTyxXQUFXLEtBQUs7QUFDdkIsV0FBTztBQUFBLEVBQ1g7QUFFQSxNQUFJLGlCQUFpQkEsS0FBSSxjQUFjLGtCQUFrQkEsS0FBSSxVQUFVO0FBQ25FLFdBQU8sV0FBVyxLQUFLO0FBQ3ZCLFdBQU87QUFBQSxFQUNYO0FBRUEsU0FBTztBQUNYO0FBRUEsU0FBUyxPQUFPLFFBQXdCLE9BQXVCO0FBQzNELE1BQUksY0FBYyxRQUFRLEtBQUssRUFBRztBQUVsQyxNQUFJLGVBQWUsVUFBVSxPQUFPLE9BQU8sYUFBYSxZQUFZO0FBQ2hFLFdBQU8sT0FBTyxVQUFVLElBQUk7QUFBQSxFQUNoQztBQUVBLE1BQUksWUFBWSxVQUFVLE9BQU8sT0FBTyxVQUFVLFlBQVk7QUFDMUQsV0FBTyxPQUFPLE9BQU8sS0FBSztBQUFBLEVBQzlCO0FBRUEsUUFBTSxNQUFNLGlCQUFpQixLQUFLLFNBQVMsTUFBTSxFQUFFO0FBQ3ZEO0FBRUEsSUFBTSxFQUFFLFVBQVUsa0JBQWtCLElBQUksU0FBUztBQUFBLEVBQzdDLE9BQU8sUUFBUSxLQUFLO0FBQ2hCLFFBQUksRUFBRSxrQkFBa0JBLEtBQUksU0FBUztBQUNqQyxhQUFPLFFBQVEsS0FBSyxNQUFNLHFCQUFxQixNQUFNLEVBQUUsQ0FBQztBQUFBLElBQzVEO0FBRUEsVUFBTSxNQUFNLE9BQU8sa0JBQWtCO0FBQ3JDLFFBQUk7QUFFSixVQUFNLFNBQVMsQ0FBQ0UsU0FBZ0I7QUFDNUIsVUFBSSxDQUFDQSxLQUFJLFNBQVMsR0FBRyxLQUFLLENBQUNBLEtBQUksU0FBUyxHQUFHLEdBQUc7QUFDMUMsUUFBQUEsT0FBTSxPQUFPQSxJQUFHO0FBQUEsTUFDcEI7QUFFQSxVQUFJLFNBQVUsS0FBSSxnQkFBZ0IsUUFBUTtBQUUxQyxpQkFBVyxJQUFJRixLQUFJLFlBQVk7QUFDL0IsZUFBUyxpQkFBaUJFLElBQUc7QUFDN0IsVUFBSSxhQUFhLFVBQVVGLEtBQUksNEJBQTRCO0FBQUEsSUFDL0Q7QUFFQSxRQUFJLGVBQWUsVUFBVTtBQUN6QixhQUFPLElBQUksSUFBSSxDQUFDO0FBQ2hCLFlBQU0sVUFBVSxJQUFJLFVBQVUsTUFBTSxPQUFPLElBQUksSUFBSSxDQUFDLENBQUM7QUFDckQsZ0JBQVUsT0FBTztBQUFBLElBQ3JCLE9BQU87QUFDSCxhQUFPLEdBQUc7QUFBQSxJQUNkO0FBQUEsRUFDSjtBQUFBLEVBQ0EsU0FBUyxRQUFRLFdBQVc7QUFDeEIsUUFBSSxFQUFFLGtCQUFrQkEsS0FBSSxTQUFTO0FBQ2pDLGFBQU8sUUFBUSxLQUFLLE1BQU0sMkJBQTJCLE1BQU0sRUFBRSxDQUFDO0FBQUEsSUFDbEU7QUFFQSxRQUFJLHFCQUFxQixVQUFVO0FBQy9CLGFBQU8sYUFBYSxVQUFVLElBQUksRUFBRSxNQUFNLEtBQUs7QUFDL0MsWUFBTSxVQUFVLFVBQVU7QUFBQSxRQUN0QixNQUFPLE9BQU8sYUFBYSxVQUFVLElBQUksRUFBRSxNQUFNLEtBQUs7QUFBQSxNQUMxRDtBQUNBLGdCQUFVLE9BQU87QUFBQSxJQUNyQixPQUFPO0FBQ0gsYUFBTyxnQkFBZ0IsVUFBVSxNQUFNLEtBQUssQ0FBQztBQUFBLElBQ2pEO0FBQUEsRUFDSjtBQUFBLEVBQ0EsU0FBUyxRQUFRLE9BQU8sUUFBUSxJQUFJO0FBQ2hDLFFBQUksRUFBRSxpQkFBaUJHLFNBQVEsU0FBUztBQUNwQyxjQUFRSCxLQUFJLE1BQU0sSUFBSSxPQUFPLEtBQUssQ0FBQztBQUFBLElBQ3ZDO0FBRUEsUUFBSSxXQUFXLFFBQVEsT0FBTyxLQUFLLEVBQUc7QUFFdEMsUUFBSSxrQkFBa0IsVUFBVTtBQUM1QixhQUFPLFNBQVMsS0FBSztBQUNyQjtBQUFBLElBQ0o7QUFFQSxRQUFJLGtCQUFrQkEsS0FBSSxXQUFXO0FBQ2pDLFVBQUksaUJBQWlCLFVBQVU7QUFDM0IsbUJBQVcsTUFBTSxNQUFNLFVBQVU7QUFDN0IsY0FBSSxRQUFRLElBQUksS0FBSztBQUFBLFFBQ3pCO0FBRUEsY0FBTSxRQUFRLGVBQWUsQ0FBQyxHQUFHLElBQWFJLFdBQWtCO0FBQzVELGNBQUksRUFBRSxjQUFjRCxTQUFRLFNBQVM7QUFDakMsb0JBQVEsTUFBTSxVQUFVLGNBQWMsRUFBRSxPQUFPLE1BQU0sRUFBRSxDQUFDO0FBQ3hEO0FBQUEsVUFDSjtBQUNBLG1CQUFTLFFBQVEsSUFBSUMsTUFBSztBQUFBLFFBQzlCLENBQUM7QUFFRCxjQUFNLFFBQVEsaUJBQWlCLENBQUMsR0FBRyxPQUFnQjtBQUMvQyxjQUFJLEVBQUUsY0FBY0QsU0FBUSxTQUFTO0FBQ2pDLG9CQUFRLE1BQU0sVUFBVSxpQkFBaUIsRUFBRSxTQUFTLE1BQU0sRUFBRSxDQUFDO0FBQzdEO0FBQUEsVUFDSjtBQUNBLGlCQUFPLFFBQVEsRUFBRTtBQUFBLFFBQ3JCLENBQUM7QUFFRCxrQkFBVSxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBQy9CO0FBQUEsTUFDSjtBQUVBLFVBQUksUUFBUSxPQUFPLEtBQUs7QUFDeEI7QUFBQSxJQUNKO0FBRUEsVUFBTSxNQUFNLGNBQWMsS0FBSyxPQUFPLE1BQU0sRUFBRTtBQUFBLEVBQ2xEO0FBQ0osQ0FBQzs7O0FEcktELE9BQU8sT0FBTyxtQkFBbUI7QUFBQSxFQUM3QixLQUFLRSxLQUFJO0FBQUEsRUFDVCxRQUFRQSxLQUFJO0FBQUEsRUFDWixXQUFXQSxLQUFJO0FBQUE7QUFBQSxFQUVmLGFBQWFBLEtBQUk7QUFBQSxFQUNqQixPQUFPQSxLQUFJO0FBQUEsRUFDWCxPQUFPQSxLQUFJO0FBQUEsRUFDWCxPQUFPQSxLQUFJO0FBQUEsRUFDWCxVQUFVQSxLQUFJO0FBQUEsRUFDZCxZQUFZQSxLQUFJO0FBQUEsRUFDaEIsU0FBU0EsS0FBSTtBQUFBLEVBQ2IsU0FBU0EsS0FBSTtBQUFBLEVBQ2IsVUFBVUEsS0FBSTtBQUFBLEVBQ2QsZ0JBQWdCQSxLQUFJO0FBQUEsRUFDcEIsUUFBUUMsT0FBTTtBQUFBLEVBQ2QsT0FBT0QsS0FBSTtBQUFBLEVBQ1gsUUFBUUEsS0FBSTtBQUFBLEVBQ1osY0FBY0EsS0FBSTtBQUFBLEVBQ2xCLFFBQVFDLE9BQU07QUFDbEIsQ0FBQzs7O0FEdkJjLFNBQVIsV0FBNEI7QUFDL0IsTUFBSTtBQUNKLE1BQUk7QUFDSixNQUFJO0FBRUosUUFBTSxPQUFPLElBQUksVUFBVSxLQUFLO0FBQ2hDLFFBQU0sQ0FBQyxNQUFNLE9BQU8sSUFBSSxZQUFZLElBQUksTUFBNkIsQ0FBQztBQUV0RSxXQUFTLE9BQU8sTUFBYztBQUMxQixRQUFJLFNBQVMsR0FBSSxTQUFRLENBQUMsQ0FBQztBQUFBLFFBQ3RCLFNBQVEsS0FBSyxZQUFZLElBQUksRUFBRSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0FBQUEsRUFDbkQ7QUFFQSxXQUFTLE9BQU8sS0FBNkI7QUFDekMsUUFBSSxLQUFLO0FBQ0wsVUFBSSxLQUFLO0FBQ1QsVUFBSSxPQUFPO0FBQUEsSUFDZjtBQUFBLEVBQ0o7QUFJQSxXQUFTLE1BQ0wsSUFDQSxRQUNBLEdBQ0FDLE1BQ0Y7QUFDRSxRQUFJLFdBQVcsSUFBSSxZQUFZO0FBQzNCLFVBQUksVUFBVTtBQUNkO0FBQUEsSUFDSjtBQUFBLEVBRUo7QUFHQSxXQUFTLFFBQVEsSUFBc0IsR0FBVyxHQUFXLEdBQVc7QUFDcEUsVUFBTSxDQUFDLEVBQUUsSUFBSSxJQUFJLFdBQVcsZUFBZSxHQUFHO0FBQzlDLFVBQU0sV0FBVyxJQUFJLFNBQVMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBRTVDLFFBQUksQ0FBQyxLQUFLLGVBQWUsUUFBUSxHQUFHO0FBQ2hDLFVBQUksVUFBVTtBQUNkLGFBQU87QUFBQSxJQUNYO0FBQUEsRUFDSjtBQUVBLFNBQ0k7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNHLEdBQUcsQ0FBQyxRQUFTLE1BQU07QUFBQSxNQUNuQixPQUFNO0FBQUEsTUFDTixNQUFLO0FBQUEsTUFDTCxRQUFRO0FBQUEsTUFDUixhQUFhQyxPQUFNLFlBQVk7QUFBQSxNQUMvQixTQUFTQSxPQUFNLFFBQVE7QUFBQSxNQUN2QixpQkFBaUIsQ0FBQyxFQUFFLFFBQVEsTUFBTTtBQUM5QixjQUFNLFVBQVUsV0FBVyxrQkFBa0I7QUFFN0MsWUFBSSxTQUFTO0FBQ1QsbUJBQVMsYUFBYSxZQUFZO0FBQ2xDLG1CQUFTLFVBQVUsWUFBWTtBQUMvQixzQkFBWSxXQUFXO0FBQUEsUUFDM0IsT0FBTztBQUNILHNCQUFZLFNBQVMsRUFBRTtBQUFBLFFBQzNCO0FBQUEsTUFDSjtBQUFBLE1BRUE7QUFBQSw0QkFBQ0MsS0FBSSxvQkFBSixFQUF1QixjQUFjLE9BQU87QUFBQSxRQUM3QyxvQkFBQ0EsS0FBSSxjQUFKLEVBQWlCLFdBQVcsU0FBUztBQUFBLFFBQ3RDO0FBQUEsVUFBQztBQUFBO0FBQUEsWUFDRyxHQUFHLENBQUMsUUFBUyxhQUFhO0FBQUEsWUFDMUIsTUFBSztBQUFBLFlBQ0wsZ0JBQWdCO0FBQUEsWUFDaEIsZUFBZTtBQUFBLFlBQ2YsUUFBUUEsS0FBSSxNQUFNO0FBQUEsWUFDbEIsUUFBUUEsS0FBSSxNQUFNO0FBQUEsWUFDbEIsYUFBYUEsS0FBSSxZQUFZO0FBQUEsWUFFN0I7QUFBQTtBQUFBLGdCQUFDO0FBQUE7QUFBQSxrQkFDRyxHQUFHLENBQUMsUUFBUyxjQUFjO0FBQUEsa0JBQzNCLGNBQWMsQ0FBQyxFQUFFLEtBQUssTUFBTSxPQUFPLElBQUk7QUFBQSxrQkFDdkMsWUFBWSxNQUFNLE9BQU8sS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQUEsa0JBQ3RDLFNBQU87QUFBQSxrQkFDUCxpQkFBZ0I7QUFBQTtBQUFBLGNBQ3BCO0FBQUEsY0FDQSxvQkFBQ0EsS0FBSSxXQUFKLEVBQWMsU0FBUyxLQUFLLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxHQUFHO0FBQUEsY0FDbkQ7QUFBQSxnQkFBQztBQUFBO0FBQUEsa0JBQ0csYUFBYUEsS0FBSSxZQUFZO0FBQUEsa0JBRTdCLDhCQUFDLE9BQUksTUFBTSxNQUNOLFdBQUMsUUFBUTtBQUNOLHdCQUFJO0FBRUosMkJBQ0k7QUFBQSxzQkFBQztBQUFBO0FBQUEsd0JBQ0csT0FBTTtBQUFBLHdCQUNOLEdBQUcsQ0FBQyxRQUFRO0FBQ1IsbUNBQVM7QUFFVCxxQ0FBVyxNQUFNLE9BQU8sa0JBQWtCLEdBQUcsVUFBVSxTQUFTLEdBQUcsR0FBRztBQUFBLHdCQUMxRTtBQUFBLHdCQUNBLFdBQVcsTUFBTSxPQUFPLEdBQUc7QUFBQSx3QkFFM0IsK0JBQUMsU0FDRztBQUFBLDhDQUFDLFdBQU0sVUFBVSxJQUFJLFVBQVU7QUFBQSwwQkFDL0Isb0JBQUMsV0FBTSxPQUFPLElBQUksTUFBTSxlQUFlLElBQUksTUFBSSxNQUFDO0FBQUEsMkJBQ3BEO0FBQUE7QUFBQSxvQkFDSjtBQUFBLGtCQUVSLEdBQ0o7QUFBQTtBQUFBLGNBQ0o7QUFBQTtBQUFBO0FBQUEsUUFDSjtBQUFBO0FBQUE7QUFBQSxFQUNKO0FBRVI7OztBR3BIQSxPQUFPQyxXQUFVO0FBR2pCLElBQUk7QUFFSixZQUFJLE1BQU07QUFBQSxFQUNSLEtBQUs7QUFBQSxFQUNMLGNBQWM7QUFBQSxFQUNkLGVBQWUsU0FBUyxLQUFLO0FBQzNCLFVBQU0sQ0FBQyxFQUFFLElBQUksSUFBSUEsTUFBSyxpQkFBaUIsT0FBTztBQUM5QyxRQUFJLENBQUMsS0FBTSxRQUFPLElBQUksa0JBQWtCO0FBRXhDLFlBQVEsS0FBSyxDQUFDLEdBQUc7QUFBQSxNQUNmLEtBQUs7QUFDSCxvQkFBWSxVQUFVLENBQUMsWUFBWTtBQUNuQyxlQUFPLElBQUksSUFBSTtBQUFBLE1BQ2pCO0FBQ0UsZUFBTyxJQUFJLGlCQUFpQjtBQUFBLElBQ2hDO0FBQUEsRUFDRjtBQUFBLEVBQ0EsT0FBTztBQUNMLGtCQUFjLFNBQVM7QUFDdkIsZ0JBQUksV0FBVyxXQUFXO0FBQUEsRUFDNUI7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogWyJtb2QiLCAicGF0Y2giLCAiR09iamVjdCIsICJHT2JqZWN0IiwgIkdMaWIiLCAic25ha2VpZnkiLCAic25ha2VpZnkiLCAiR09iamVjdCIsICJzZXQiLCAiR09iamVjdCIsICJrZXkiLCAib2JqZWN0IiwgIkdPYmplY3QiLCAibW9kIiwgIkdPYmplY3QiLCAicmVtb3ZlIiwgIkFzdGFsIiwgIkd0ayIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkdpbyIsICJHT2JqZWN0IiwgIkd0ayIsICJHaW8iLCAiY3NzIiwgIkdPYmplY3QiLCAiaW5kZXgiLCAiR3RrIiwgIkFzdGFsIiwgIm1vZCIsICJBc3RhbCIsICJHdGsiLCAiR0xpYiJdCn0K

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@